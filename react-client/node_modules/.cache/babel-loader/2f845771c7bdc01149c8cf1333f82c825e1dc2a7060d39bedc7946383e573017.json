{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\ExamPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./ExamPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamPage = () => {\n  _s();\n  const {\n    examId\n  } = useParams();\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [selectedQuestionId, setSelectedQuestionId] = useState(null);\n  useEffect(() => {\n    const fetchExam = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          alert(\"로그인이 필요합니다.\");\n          return;\n        }\n        const examResponse = await axios.get(`http://localhost:8090/api/exams/${examId}/questions`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"🔥 응답 받은 exam 데이터:\", examResponse.data);\n        const examData = {\n          ...examResponse.data,\n          questions: examResponse.data\n        };\n        setExam(examData);\n      } catch (error) {\n        console.error(\"시험 정보를 불러오는 중 오류 발생\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchExam();\n  }, [examId]);\n  const handleChange = (questionId, answer) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answer\n    });\n  };\n  const handleSubmit = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const studentId = localStorage.getItem(\"studentId\");\n      if (!token || !studentId) {\n        alert(\"로그인이 필요합니다.\");\n        return;\n      }\n      const response = await axios.post(`http://localhost:8090/api/exams/${examId}/questions/submit`, {\n        studentId,\n        answers\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"답안이 제출되었습니다.\");\n      console.log(\"제출한 답안:\", response.data);\n    } catch (error) {\n      console.error(\"답안을 제출하는 중 오류 발생:\", error);\n      alert(\"답안 제출 실패: \" + error.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC2DC\\uD5D8 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  if (!exam || !exam.questions || exam.questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD604\\uC7AC \\uC2DC\\uD5D8 \\uBB38\\uC81C\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n  const questions = exam.questions || [];\n  const selectedQuestion = questions.find(q => q.id === selectedQuestionId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exam-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uBB38\\uC81C \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedQuestionId(question.id),\n        className: \"question-button\",\n        children: question.id\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"exam-header\",\n        children: exam.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), selectedQuestion ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-text\",\n          children: selectedQuestion.questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-container\",\n          children: selectedQuestion.type === \"MULTIPLE_CHOICE\" ? selectedQuestion.answers.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"option-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${selectedQuestion.id}`,\n              value: option,\n              checked: answers[selectedQuestion.id] === option,\n              onChange: () => handleChange(selectedQuestion.id, option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this), option]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"essay-input\",\n            placeholder: \"\\uB2F5\\uBCC0\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n            value: answers[selectedQuestion.id] || \"\",\n            onChange: e => handleChange(selectedQuestion.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uBB38\\uC81C\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"submit-button\",\n        children: \"\\uC81C\\uCD9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamPage, \"7cmaNCF02URinFDcAHBOgB3adeo=\", false, function () {\n  return [useParams];\n});\n_c = ExamPage;\nexport default ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","ExamPage","_s","examId","exam","setExam","answers","setAnswers","loading","setLoading","selectedQuestionId","setSelectedQuestionId","fetchExam","token","localStorage","getItem","alert","examResponse","get","headers","Authorization","console","log","data","examData","questions","error","handleChange","questionId","answer","handleSubmit","studentId","response","post","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","selectedQuestion","find","q","id","className","map","question","onClick","title","questionText","type","option","index","name","value","checked","onChange","placeholder","e","target","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/ExamPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./ExamPage.css\";\r\n\r\nconst ExamPage = () => {\r\n  const { examId } = useParams();\r\n  const [exam, setExam] = useState(null);\r\n  const [answers, setAnswers] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedQuestionId, setSelectedQuestionId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchExam = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          alert(\"로그인이 필요합니다.\");\r\n          return;\r\n        }\r\n\r\n        const examResponse = await axios.get(`http://localhost:8090/api/exams/${examId}/questions`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        console.log(\"🔥 응답 받은 exam 데이터:\", examResponse.data);\r\n\r\n        const examData = {\r\n          ...examResponse.data,\r\n          questions: examResponse.data,\r\n        };\r\n        setExam(examData);\r\n      } catch (error) {\r\n        console.error(\"시험 정보를 불러오는 중 오류 발생\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchExam();\r\n  }, [examId]);\r\n\r\n  const handleChange = (questionId, answer) => {\r\n    setAnswers({ ...answers, [questionId]: answer });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const studentId = localStorage.getItem(\"studentId\");\r\n      if (!token || !studentId) {\r\n        alert(\"로그인이 필요합니다.\");\r\n        return;\r\n      }\r\n\r\n      const response = await axios.post(\r\n        `http://localhost:8090/api/exams/${examId}/questions/submit`,\r\n        { studentId, answers },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      alert(\"답안이 제출되었습니다.\");\r\n      console.log(\"제출한 답안:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"답안을 제출하는 중 오류 발생:\", error);\r\n      alert(\"답안 제출 실패: \" + error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>시험 정보를 불러오는 중...</p>;\r\n  }\r\n\r\n  if (!exam || !exam.questions || exam.questions.length === 0) {\r\n    return <p>현재 시험 문제가 없습니다.</p>;\r\n  }\r\n\r\n  const questions = exam.questions || [];\r\n  const selectedQuestion = questions.find(q => q.id === selectedQuestionId);\r\n\r\n  return (\r\n    <div className=\"exam-container\">\r\n      <div className=\"exam-sidebar\">\r\n        <h3>문제 목록</h3>\r\n        {questions.map((question) => (\r\n          <button\r\n            key={question.id}\r\n            onClick={() => setSelectedQuestionId(question.id)}\r\n            className=\"question-button\"\r\n          >\r\n            {question.id}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"exam-content\">\r\n        <h2 className=\"exam-header\">{exam.title}</h2>\r\n        {selectedQuestion ? (\r\n          <div className=\"question-container\">\r\n            <p className=\"question-text\">{selectedQuestion.questionText}</p>\r\n            <div className=\"options-container\">\r\n              {selectedQuestion.type === \"MULTIPLE_CHOICE\" ? (\r\n                selectedQuestion.answers.map((option, index) => (\r\n                  <label key={index} className=\"option-label\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`question-${selectedQuestion.id}`}\r\n                      value={option}\r\n                      checked={answers[selectedQuestion.id] === option}\r\n                      onChange={() => handleChange(selectedQuestion.id, option)}\r\n                    />\r\n                    {option}\r\n                  </label>\r\n                ))\r\n              ) : (\r\n                <textarea\r\n                  className=\"essay-input\"\r\n                  placeholder=\"답변을 입력하세요.\"\r\n                  value={answers[selectedQuestion.id] || \"\"}\r\n                  onChange={(e) => handleChange(selectedQuestion.id, e.target.value)}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p>문제를 선택하세요.</p>\r\n        )}\r\n        <button onClick={handleSubmit} className=\"submit-button\">제출</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}