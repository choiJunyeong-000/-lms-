{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\StudentManagePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./StudentManagePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentManagePage = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [openCourses, setOpenCourses] = useState({});\n  const [instructorId, setInstructorId] = useState(null);\n  const [instructorCourses, setInstructorCourses] = useState([]);\n  useEffect(() => {\n    // 로그인한 강사 정보 가져오기\n    const fetchInstructorId = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8090/api/auth/current-user\");\n        setInstructorId(response.data.instructorId);\n      } catch (error) {\n        console.error(\"Error fetching instructor information:\", error);\n      }\n    };\n    fetchInstructorId();\n  }, []);\n  useEffect(() => {\n    // 강사 ID가 있을 때만 해당 강사의 학생 목록 가져오기\n    if (instructorId) {\n      axios.get(`http://localhost:8090/api/student-manage/approved/instructor/${instructorId}`).then(response => {\n        setStudents(response.data);\n\n        // 강사의 강좌 목록 추출\n        const courses = [...new Set(response.data.map(student => student.courseName))];\n        setInstructorCourses(courses);\n      }).catch(error => console.error(\"Error fetching students:\", error));\n    }\n  }, [instructorId]);\n\n  // 강좌 클릭 시 열림/닫힘 토글\n  const toggleCourse = courseName => {\n    setOpenCourses(prevState => ({\n      ...prevState,\n      [courseName]: !prevState[courseName]\n    }));\n  };\n\n  // 강좌별 그룹화 (강좌명 기준으로 학생 분류)\n  const groupedStudents = students.reduce((acc, student) => {\n    if (!acc[student.courseName]) acc[student.courseName] = [];\n    acc[student.courseName].push(student);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-manage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"\\uC218\\uAC15\\uC0DD \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-list\",\n      children: instructorCourses.length > 0 ? instructorCourses.map((courseName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-header\",\n          onClick: () => toggleCourse(courseName),\n          children: [courseName, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"toggle-icon\",\n            children: openCourses[courseName] ? '▾' : '▸'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), openCourses[courseName] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-list-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"student-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uD559\\uBC88\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uD559\\uC0DD \\uC774\\uB984\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uCD9C\\uC11D\\uB960\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: groupedStudents[courseName].map((student, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: student.studentId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: student.studentName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [student.attendanceRate, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 53\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-courses-message\",\n        children: \"\\uB2F4\\uB2F9\\uD558\\uB294 \\uAC15\\uC88C\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentManagePage, \"Pt1ov33/JVzH5WgeWmYYA+Jqw/k=\");\n_c = StudentManagePage;\nexport default StudentManagePage;\nvar _c;\n$RefreshReg$(_c, \"StudentManagePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","StudentManagePage","_s","students","setStudents","openCourses","setOpenCourses","instructorId","setInstructorId","instructorCourses","setInstructorCourses","fetchInstructorId","response","get","data","error","console","then","courses","Set","map","student","courseName","catch","toggleCourse","prevState","groupedStudents","reduce","acc","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","onClick","idx","studentId","studentName","attendanceRate","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/StudentManagePage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./StudentManagePage.css\";\r\n\r\nconst StudentManagePage = () => {\r\n    const [students, setStudents] = useState([]);\r\n    const [openCourses, setOpenCourses] = useState({});\r\n    const [instructorId, setInstructorId] = useState(null);\r\n    const [instructorCourses, setInstructorCourses] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        // 로그인한 강사 정보 가져오기\r\n        const fetchInstructorId = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:8090/api/auth/current-user\");\r\n                setInstructorId(response.data.instructorId);\r\n            } catch (error) {\r\n                console.error(\"Error fetching instructor information:\", error);\r\n            }\r\n        };\r\n        \r\n        fetchInstructorId();\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        // 강사 ID가 있을 때만 해당 강사의 학생 목록 가져오기\r\n        if (instructorId) {\r\n            axios.get(`http://localhost:8090/api/student-manage/approved/instructor/${instructorId}`)\r\n                .then(response => {\r\n                    setStudents(response.data);\r\n                    \r\n                    // 강사의 강좌 목록 추출\r\n                    const courses = [...new Set(response.data.map(student => student.courseName))];\r\n                    setInstructorCourses(courses);\r\n                })\r\n                .catch(error => console.error(\"Error fetching students:\", error));\r\n        }\r\n    }, [instructorId]);\r\n    \r\n    // 강좌 클릭 시 열림/닫힘 토글\r\n    const toggleCourse = (courseName) => {\r\n        setOpenCourses(prevState => ({\r\n            ...prevState,\r\n            [courseName]: !prevState[courseName]\r\n        }));\r\n    };\r\n    \r\n    // 강좌별 그룹화 (강좌명 기준으로 학생 분류)\r\n    const groupedStudents = students.reduce((acc, student) => {\r\n        if (!acc[student.courseName]) acc[student.courseName] = [];\r\n        acc[student.courseName].push(student);\r\n        return acc;\r\n    }, {});\r\n    \r\n    return (\r\n        <div className=\"student-manage-container\">\r\n            <h1 className=\"page-title\">수강생 관리</h1>\r\n            <div className=\"course-list\">\r\n                {instructorCourses.length > 0 ? (\r\n                    instructorCourses.map((courseName, index) => (\r\n                        <div className=\"course-item\" key={index}>\r\n                            <div \r\n                                className=\"course-header\"\r\n                                onClick={() => toggleCourse(courseName)}\r\n                            >\r\n                                {courseName}\r\n                                <span className=\"toggle-icon\">{openCourses[courseName] ? '▾' : '▸'}</span>\r\n                            </div>\r\n                            {openCourses[courseName] && (\r\n                                <div className=\"student-list-container\">\r\n                                    <table className=\"student-table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>학번</th>\r\n                                                <th>학생 이름</th>\r\n                                                <th>출석률</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {groupedStudents[courseName].map((student, idx) => (\r\n                                                <tr key={idx}>\r\n                                                    <td>{student.studentId}</td>\r\n                                                    <td>{student.studentName}</td>\r\n                                                    <td>{student.attendanceRate}%</td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p className=\"no-courses-message\">담당하는 강좌가 없습니다.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentManagePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}