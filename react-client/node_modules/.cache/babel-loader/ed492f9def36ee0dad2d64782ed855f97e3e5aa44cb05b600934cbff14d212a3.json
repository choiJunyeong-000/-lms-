{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\VideoDetailPage.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoDetailPage = ({\n  videoUrl,\n  week\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const [isChecked, setIsChecked] = useState(false);\n  const [lastSavedProgress, setLastSavedProgress] = useState(0);\n  const progressSaveInterval = 1; // 1초마다 진도율 저장\n  const ATTENDANCE_THRESHOLD = 90; // 출석 인정 기준 시청률 (90%)\n  const [content, setContent] = useState(null);\n  const token = localStorage.getItem('token');\n  const role = localStorage.getItem('role'); // 사용자 역할 가져오기\n  const studentId = localStorage.getItem('studentId');\n  if (studentId) {\n    console.log(\"studentId: \", studentId);\n  } else {\n    console.log(\"studentId가 localStorage에 없습니다.\");\n  }\n  const courseId = localStorage.getItem('courseId');\n  if (courseId) {\n    console.log(\"courseId: \", studentId);\n  } else {\n    console.log(\"courseId가 localStorage에 없습니다.\");\n  }\n  useEffect(() => {\n    // videoContent를 sessionStorage에서 가져오기\n    const savedContent = sessionStorage.getItem(\"videoContent\");\n    if (savedContent) {\n      setContent(JSON.parse(savedContent));\n    }\n  }, []);\n  useEffect(() => {\n    if (role !== \"STUDENT\") return; // 학생이 아닐 경우 실행 안 함\n    // 초기 출석 상태 확인\n    const checkAttendanceStatus = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8090/api/attendance/status?studentId=${studentId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // courseId가 키인 맵에서 출석 상태를 확인\n        if (response.data[courseId] === true) {\n          setIsChecked(true);\n        }\n      } catch (error) {\n        console.error(\"출석 상태 확인 실패\", error);\n      }\n    };\n\n    // 이전 시청 진도율 확인\n    const checkProgressStatus = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8090/api/attendance/progress/status?studentId=${studentId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // courseId가 키인 맵에서 진도율 확인\n        if (response.data[courseId]) {\n          setLastSavedProgress(response.data[courseId]);\n\n          // 동영상 시간 설정 (비디오가 로드된 후에 실행)\n          if (videoRef.current) {\n            const duration = videoRef.current.duration;\n            if (!isNaN(duration)) {\n              videoRef.current.currentTime = response.data[courseId] / 100 * duration;\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"진도율 확인 실패\", error);\n      }\n    };\n    checkAttendanceStatus();\n    checkProgressStatus();\n  }, [studentId, courseId, token]);\n\n  // 비디오 메타데이터 로드 완료 후 진도율에 따라 영상 위치 설정\n  const handleLoadedMetadata = () => {\n    if (videoRef.current && lastSavedProgress > 0) {\n      const duration = videoRef.current.duration;\n      videoRef.current.currentTime = lastSavedProgress / 100 * duration;\n    }\n  };\n  useEffect(() => {\n    const savedContent = sessionStorage.getItem(\"videoContent\");\n    if (savedContent) {\n      setContent(JSON.parse(savedContent));\n    }\n  }, []);\n\n  // 주기적으로 진도율 저장 (10초마다)\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      saveCurrentProgress();\n    }, progressSaveInterval * 100);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // 현재 진도율 저장\n  const saveCurrentProgress = async () => {\n    if (!videoRef.current) return;\n    const video = videoRef.current;\n    const watchedPercentage = video.currentTime / video.duration * 100;\n\n    // 이미 출석이 완료되었거나 진도율이 0인 경우 저장하지 않음\n    if (isChecked || watchedPercentage === 0) return;\n    try {\n      // 진도율 저장 API 호출 (이 API 엔드포인트는 Spring 컨트롤러에 없으므로 생략하거나 수정 필요)\n      console.log(\"진도율 저장: \", watchedPercentage);\n      setLastSavedProgress(watchedPercentage);\n    } catch (error) {\n      console.error(\"진도율 저장 실패\", error);\n    }\n  };\n\n  // 영상 시청 중 처리\n  const handleTimeUpdate = async () => {\n    if (!videoRef.current) return;\n    const video = videoRef.current;\n    const watchedPercentage = video.currentTime / video.duration * 100;\n    if (watchedPercentage >= ATTENDANCE_THRESHOLD && !isChecked) {\n      if (!content || !content.id) {\n        console.error(\"contentId가 존재하지 않습니다.\");\n        return;\n      }\n      try {\n        const response = await axios.post(\"http://localhost:8090/api/attendance/course\", {\n          studentId,\n          courseId,\n          contentId: content.id,\n          // content.id 확인\n          watchedPercentage\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data === \"출석 완료\") {\n          setIsChecked(true);\n        }\n      } catch (error) {\n        console.error(\"강의 출석 체크 실패\", error);\n      }\n    }\n  };\n\n  // 수동 출석 체크 (강의 단위)\n  const handleCourseAttendance = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:8090/api/attendance/course\", {\n        studentId,\n        courseId,\n        watchedPercentage: 100\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data === \"출석 완료\") {\n        setIsChecked(true);\n      }\n    } catch (error) {\n      console.error(\"강의 출석 체크 실패\", error);\n    }\n  };\n  if (!content) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 16\n    }, this);\n  }\n  return console.log(studentId), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-player-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      controls: true,\n      autoPlay: true,\n      onTimeUpdate: handleTimeUpdate,\n      onLoadedMetadata: handleLoadedMetadata,\n      width: \"640\",\n      height: \"360\",\n      className: \"main-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: content === null || content === void 0 ? void 0 : content.filePath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 3\n      }, this), \"\\uBE0C\\uB77C\\uC6B0\\uC800\\uAC00 \\uBE44\\uB514\\uC624 \\uD0DC\\uADF8\\uB97C \\uC9C0\\uC6D0\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendance-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-info\",\n        children: [\"\\uD604\\uC7AC \\uC9C4\\uB3C4\\uC728: \", lastSavedProgress.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"attendance-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isChecked,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), \"\\uCD9C\\uC11D \\uC644\\uB8CC \", isChecked ? '✓' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), !isChecked && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"attendance-button\",\n        onClick: handleCourseAttendance,\n        children: \"\\uC218\\uB3D9 \\uCD9C\\uC11D \\uCCB4\\uD06C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 7\n  }, this);\n};\n_s(VideoDetailPage, \"uI4WSdojfpTgeMKXL+3wUQAAMtY=\");\n_c = VideoDetailPage;\nexport default VideoDetailPage;\nvar _c;\n$RefreshReg$(_c, \"VideoDetailPage\");","map":{"version":3,"names":["useRef","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","VideoDetailPage","videoUrl","week","_s","videoRef","isChecked","setIsChecked","lastSavedProgress","setLastSavedProgress","progressSaveInterval","ATTENDANCE_THRESHOLD","content","setContent","token","localStorage","getItem","role","studentId","console","log","courseId","savedContent","sessionStorage","JSON","parse","checkAttendanceStatus","response","get","headers","Authorization","data","error","checkProgressStatus","current","duration","isNaN","currentTime","handleLoadedMetadata","intervalId","setInterval","saveCurrentProgress","clearInterval","video","watchedPercentage","handleTimeUpdate","id","post","contentId","handleCourseAttendance","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","controls","autoPlay","onTimeUpdate","onLoadedMetadata","width","height","src","filePath","toFixed","type","checked","readOnly","onClick","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/VideoDetailPage.js"],"sourcesContent":["import { useRef,useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst VideoDetailPage = ({ videoUrl, week }) => {\r\n    const videoRef = useRef(null);\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [lastSavedProgress, setLastSavedProgress] = useState(0);\r\n    const progressSaveInterval = 1; // 1초마다 진도율 저장\r\n    const ATTENDANCE_THRESHOLD = 90; // 출석 인정 기준 시청률 (90%)\r\n    const [content, setContent] = useState(null);\r\n    const token = localStorage.getItem('token');\r\n    const role = localStorage.getItem('role'); // 사용자 역할 가져오기\r\n    const studentId = localStorage.getItem('studentId');\r\n    if (studentId) {\r\n      console.log(\"studentId: \", studentId);\r\n    } else {\r\n      console.log(\"studentId가 localStorage에 없습니다.\");\r\n    }\r\n\r\n    const courseId = localStorage.getItem('courseId');\r\n    if (courseId) {\r\n      console.log(\"courseId: \", studentId);\r\n    } else {\r\n      console.log(\"courseId가 localStorage에 없습니다.\");\r\n    }\r\n    useEffect(() => {\r\n        // videoContent를 sessionStorage에서 가져오기\r\n        const savedContent = sessionStorage.getItem(\"videoContent\");\r\n        if (savedContent) {\r\n          setContent(JSON.parse(savedContent));\r\n        }\r\n      }, []);\r\n    useEffect(() => {\r\n      if (role !== \"STUDENT\") return; // 학생이 아닐 경우 실행 안 함\r\n      // 초기 출석 상태 확인\r\n      const checkAttendanceStatus = async () => {\r\n        try {\r\n          const response = await axios.get(\r\n            `http://localhost:8090/api/attendance/status?studentId=${studentId}`,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          \r\n          // courseId가 키인 맵에서 출석 상태를 확인\r\n          if (response.data[courseId] === true) {\r\n            setIsChecked(true);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"출석 상태 확인 실패\", error);\r\n        }\r\n      };\r\n    \r\n      \r\n      // 이전 시청 진도율 확인\r\n      const checkProgressStatus = async () => {\r\n        try {\r\n          const response = await axios.get(\r\n            `http://localhost:8090/api/attendance/progress/status?studentId=${studentId}`,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          \r\n          // courseId가 키인 맵에서 진도율 확인\r\n          if (response.data[courseId]) {\r\n            setLastSavedProgress(response.data[courseId]);\r\n            \r\n            // 동영상 시간 설정 (비디오가 로드된 후에 실행)\r\n            if (videoRef.current) {\r\n              const duration = videoRef.current.duration;\r\n              if (!isNaN(duration)) {\r\n                videoRef.current.currentTime = (response.data[courseId] / 100) * duration;\r\n              }\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"진도율 확인 실패\", error);\r\n        }\r\n      };\r\n      \r\n      checkAttendanceStatus();\r\n      checkProgressStatus();\r\n    }, [studentId, courseId, token]);\r\n  \r\n    // 비디오 메타데이터 로드 완료 후 진도율에 따라 영상 위치 설정\r\n    const handleLoadedMetadata = () => {\r\n      if (videoRef.current && lastSavedProgress > 0) {\r\n        const duration = videoRef.current.duration;\r\n        videoRef.current.currentTime = (lastSavedProgress / 100) * duration;\r\n      }\r\n    };\r\n    useEffect(() => {\r\n        const savedContent = sessionStorage.getItem(\"videoContent\");\r\n        if (savedContent) {\r\n          setContent(JSON.parse(savedContent));\r\n        }\r\n      }, []);\r\n\r\n      \r\n    \r\n    // 주기적으로 진도율 저장 (10초마다)\r\n    useEffect(() => {\r\n      const intervalId = setInterval(() => {\r\n        saveCurrentProgress();\r\n      }, progressSaveInterval * 100);\r\n      \r\n      return () => clearInterval(intervalId);\r\n    }, []);\r\n    \r\n    // 현재 진도율 저장\r\n    const saveCurrentProgress = async () => {\r\n      if (!videoRef.current) return;\r\n      \r\n      const video = videoRef.current;\r\n      const watchedPercentage = (video.currentTime / video.duration) * 100;\r\n      \r\n      // 이미 출석이 완료되었거나 진도율이 0인 경우 저장하지 않음\r\n      if (isChecked || watchedPercentage === 0) return;\r\n      \r\n      try {\r\n        // 진도율 저장 API 호출 (이 API 엔드포인트는 Spring 컨트롤러에 없으므로 생략하거나 수정 필요)\r\n        console.log(\"진도율 저장: \", watchedPercentage);\r\n        \r\n        setLastSavedProgress(watchedPercentage);\r\n      } catch (error) {\r\n        console.error(\"진도율 저장 실패\", error);\r\n      }\r\n    };\r\n    \r\n    // 영상 시청 중 처리\r\n    const handleTimeUpdate = async () => {\r\n      if (!videoRef.current) return;\r\n      \r\n      const video = videoRef.current;\r\n      const watchedPercentage = (video.currentTime / video.duration) * 100;\r\n    \r\n      if (watchedPercentage >= ATTENDANCE_THRESHOLD && !isChecked) {\r\n        if (!content || !content.id) {\r\n          console.error(\"contentId가 존재하지 않습니다.\");\r\n          return;\r\n        }\r\n    \r\n        try {\r\n          const response = await axios.post(\r\n            \"http://localhost:8090/api/attendance/course\",\r\n            { \r\n              studentId, \r\n              courseId, \r\n              contentId: content.id,  // content.id 확인\r\n              watchedPercentage \r\n            },\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n    \r\n          if (response.data === \"출석 완료\") {\r\n            setIsChecked(true);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"강의 출석 체크 실패\", error);\r\n        }\r\n      }\r\n    };\r\n    \r\n  \r\n    // 수동 출석 체크 (강의 단위)\r\n    const handleCourseAttendance = async () => {\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://localhost:8090/api/attendance/course\",\r\n          { \r\n            studentId, \r\n            courseId, \r\n            watchedPercentage: 100 \r\n          },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        \r\n        if (response.data === \"출석 완료\") {\r\n          setIsChecked(true);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"강의 출석 체크 실패\", error);\r\n      }\r\n    };\r\n    if (!content) {\r\n        return <p>로딩 중...</p>;\r\n      }\r\n    return (\r\n        console.log(studentId),\r\n      <div className=\"video-player-container\">\r\n        <video\r\n  ref={videoRef}\r\n  controls\r\n  autoPlay\r\n  onTimeUpdate={handleTimeUpdate}\r\n  onLoadedMetadata={handleLoadedMetadata}\r\n  width=\"640\"\r\n  height=\"360\"\r\n  className=\"main-video\"\r\n>\r\n  <source src={content?.filePath}  />\r\n  브라우저가 비디오 태그를 지원하지 않습니다.\r\n</video>\r\n        \r\n        <div className=\"attendance-status\">\r\n          <div className=\"progress-info\">\r\n            현재 진도율: {lastSavedProgress.toFixed(2)}%\r\n          </div>\r\n          <label className=\"attendance-label\">\r\n            <input type=\"checkbox\" checked={isChecked} readOnly />\r\n            출석 완료 {isChecked ? '✓' : ''}\r\n          </label>\r\n          {!isChecked && (\r\n            <button \r\n              className=\"attendance-button\" \r\n              onClick={handleCourseAttendance}\r\n            >\r\n              수동 출석 체크\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n\r\nexport default VideoDetailPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}