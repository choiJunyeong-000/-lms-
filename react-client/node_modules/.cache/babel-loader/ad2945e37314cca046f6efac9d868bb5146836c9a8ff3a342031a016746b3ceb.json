{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./UserProfile.css\"; // CSS 파일 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserProfile() {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    birthDate: \"\"\n  });\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) throw new Error(\"No token found. Please log in again.\");\n        const response = await axios.get(\"http://localhost:8090/api/users/me\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUser({\n          name: response.data.name,\n          email: response.data.email,\n          password: \"\",\n          birthDate: response.data.birthDate\n        });\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    fetchUserData();\n  }, []);\n  const handleChange = e => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n\n    // 입력 값 검증\n    if (!user.name || !user.email || !user.password || !user.birthDate) {\n      alert(\"모든 필드를 채워주세요.\");\n      return;\n    }\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(user.email)) {\n      alert(\"유효한 이메일 주소를 입력해주세요.\");\n      return;\n    }\n    if (user.password.length < 8) {\n      alert(\"비밀번호는 8자 이상이어야 합니다.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) throw new Error(\"No token found. Please log in again.\");\n\n      // 이메일 중복 여부 확인\n      const emailCheckResponse = await axios.post(\"http://localhost:8090/api/users/check-email\", {\n        email: user.email\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (emailCheckResponse.data) {\n        alert(\"이미 사용 중인 이메일입니다. 다른 이메일을 입력해주세요.\");\n        return;\n      }\n      await axios.put(\"http://localhost:8090/api/users/update\", user, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      alert(\"정보가 업데이트되었습니다.\");\n      navigate(\"/student\");\n    } catch (error) {\n      console.error(\"Error updating user info:\", error);\n      alert(\"정보 업데이트에 실패했습니다. 다시 시도해주세요.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0\\uC815\\uBCF4 \\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"user-profile-form\",\n      onSubmit: handleUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"\\uC774\\uB984:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: user.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"\\uC774\\uBA54\\uC77C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: user.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: user.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"birthDate\",\n          children: \"\\uC0DD\\uB144\\uC6D4\\uC77C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"birthDate\",\n          name: \"birthDate\",\n          value: user.birthDate,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"update-button\",\n        children: \"\\uC815\\uBCF4 \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"aE1IHnmoGt1rvGI3l3veGp2PtBM=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","UserProfile","_s","navigate","user","setUser","name","email","password","birthDate","fetchUserData","token","localStorage","getItem","Error","response","get","headers","Authorization","data","error","console","handleChange","e","target","value","handleUpdate","preventDefault","alert","emailRegex","test","length","emailCheckResponse","post","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./UserProfile.css\"; // CSS 파일 추가\r\n\r\nfunction UserProfile() {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState({ name: \"\", email: \"\", password: \"\", birthDate: \"\" });\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) throw new Error(\"No token found. Please log in again.\");\r\n        \r\n        const response = await axios.get(\"http://localhost:8090/api/users/me\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setUser({ name: response.data.name, email: response.data.email, password: \"\", birthDate: response.data.birthDate });\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // 입력 값 검증\r\n    if (!user.name || !user.email || !user.password || !user.birthDate) {\r\n      alert(\"모든 필드를 채워주세요.\");\r\n      return;\r\n    }\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(user.email)) {\r\n      alert(\"유효한 이메일 주소를 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n    if (user.password.length < 8) {\r\n      alert(\"비밀번호는 8자 이상이어야 합니다.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) throw new Error(\"No token found. Please log in again.\");\r\n\r\n      // 이메일 중복 여부 확인\r\n      const emailCheckResponse = await axios.post(\"http://localhost:8090/api/users/check-email\", { email: user.email }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (emailCheckResponse.data) {\r\n        alert(\"이미 사용 중인 이메일입니다. 다른 이메일을 입력해주세요.\");\r\n        return;\r\n      }\r\n      \r\n      await axios.put(\"http://localhost:8090/api/users/update\", user, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      alert(\"정보가 업데이트되었습니다.\");\r\n      navigate(\"/student\");\r\n    } catch (error) {\r\n      console.error(\"Error updating user info:\", error);\r\n      alert(\"정보 업데이트에 실패했습니다. 다시 시도해주세요.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-profile-container\">\r\n      <h2>회원정보 수정</h2>\r\n      <form className=\"user-profile-form\" onSubmit={handleUpdate}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">이름:</label>\r\n          <input type=\"text\" id=\"name\" name=\"name\" value={user.name} onChange={handleChange} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">이메일:</label>\r\n          <input type=\"email\" id=\"email\" name=\"email\" value={user.email} onChange={handleChange} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">비밀번호:</label>\r\n          <input type=\"password\" id=\"password\" name=\"password\" value={user.password} onChange={handleChange} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"birthDate\">생년월일:</label>\r\n          <input type=\"date\" id=\"birthDate\" name=\"birthDate\" value={user.birthDate} onChange={handleChange} required />\r\n        </div>\r\n        <button type=\"submit\" className=\"update-button\">정보 수정</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}