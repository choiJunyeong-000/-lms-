{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\StudentManagePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./StudentManagePage.css\"; // ✅ CSS 파일 불러오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentManagePage = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [openCourses, setOpenCourses] = useState({}); // ✅ 어떤 강좌가 열려 있는지 상태 관리\n  const [memberId, setMemberId] = useState(null); // ✅ 로그인한 사용자의 memberId\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      console.error(\"🚨 JWT 토큰 없음. 로그인 필요\");\n      return;\n    }\n\n    // ✅ 로그인한 사용자 정보 가져오기\n    axios.get(\"http://localhost:8090/api/users/me\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      console.log(\"User Info:\", response.data); // 디버깅용 로그\n      setMemberId(response.data.professor.id); // 교수 ID 설정\n    }).catch(error => console.error(\"Error fetching user info:\", error));\n  }, []);\n  useEffect(() => {\n    if (memberId) {\n      const token = localStorage.getItem(\"token\");\n\n      // ✅ 승인된 학생 목록 가져오기\n      axios.get(\"http://localhost:8090/api/student-manage/approved\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        console.log(\"Students Data:\", response.data); // 디버깅용 로그\n        // ✅ 로그인한 사용자가 담당하는 강의에 속한 학생들만 필터링\n        const filteredStudents = response.data.filter(student => {\n          console.log(\"Student Data:\", student); // 디버깅용 로그\n          return student.professorId === memberId;\n        });\n        console.log(\"Filtered Students:\", filteredStudents); // 디버깅용 로그\n        setStudents(filteredStudents);\n      }).catch(error => console.error(\"Error fetching students:\", error));\n    }\n  }, [memberId]);\n\n  // ✅ 강좌 클릭 시 열림/닫힘 토글\n  const toggleCourse = courseName => {\n    setOpenCourses(prevState => ({\n      ...prevState,\n      [courseName]: !prevState[courseName]\n    }));\n  };\n\n  // ✅ 강좌별 그룹화 (강좌명 기준으로 학생 분류)\n  const groupedStudents = students.reduce((acc, student) => {\n    if (!acc[student.courseName]) acc[student.courseName] = [];\n    acc[student.courseName].push(student);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-manage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC218\\uAC15\\uC0DD \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-list\",\n      children: Object.keys(groupedStudents).map((courseName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-header\",\n          onClick: () => toggleCourse(courseName),\n          children: [courseName, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `arrow ${openCourses[courseName] ? \"open\" : \"\"}`,\n            children: \"\\u25BE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), openCourses[courseName] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-list\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uD559\\uBC88\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uD559\\uC0DD \\uC774\\uB984\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uCD9C\\uC11D\\uB960\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: groupedStudents[courseName].map((student, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: student.studentId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: student.studentName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [student.attendanceRate, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 49\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentManagePage, \"U3feKW3kqWLucw/+4RfotMEcwsA=\");\n_c = StudentManagePage;\nexport default StudentManagePage;\nvar _c;\n$RefreshReg$(_c, \"StudentManagePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","StudentManagePage","_s","students","setStudents","openCourses","setOpenCourses","memberId","setMemberId","token","localStorage","getItem","console","error","get","headers","Authorization","then","response","log","data","professor","id","catch","filteredStudents","filter","student","professorId","toggleCourse","courseName","prevState","groupedStudents","reduce","acc","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","index","onClick","idx","studentId","studentName","attendanceRate","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/StudentManagePage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./StudentManagePage.css\"; // ✅ CSS 파일 불러오기\r\n\r\nconst StudentManagePage = () => {\r\n    const [students, setStudents] = useState([]);\r\n    const [openCourses, setOpenCourses] = useState({}); // ✅ 어떤 강좌가 열려 있는지 상태 관리\r\n    const [memberId, setMemberId] = useState(null); // ✅ 로그인한 사용자의 memberId\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            console.error(\"🚨 JWT 토큰 없음. 로그인 필요\");\r\n            return;\r\n        }\r\n\r\n        // ✅ 로그인한 사용자 정보 가져오기\r\n        axios.get(\"http://localhost:8090/api/users/me\", {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        .then(response => {\r\n            console.log(\"User Info:\", response.data); // 디버깅용 로그\r\n            setMemberId(response.data.professor.id); // 교수 ID 설정\r\n        })\r\n        .catch(error => console.error(\"Error fetching user info:\", error));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (memberId) {\r\n            const token = localStorage.getItem(\"token\");\r\n\r\n            // ✅ 승인된 학생 목록 가져오기\r\n            axios.get(\"http://localhost:8090/api/student-manage/approved\", {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            })\r\n            .then(response => {\r\n                console.log(\"Students Data:\", response.data); // 디버깅용 로그\r\n                // ✅ 로그인한 사용자가 담당하는 강의에 속한 학생들만 필터링\r\n                const filteredStudents = response.data.filter(student => {\r\n                    console.log(\"Student Data:\", student); // 디버깅용 로그\r\n                    return student.professorId === memberId;\r\n                });\r\n                console.log(\"Filtered Students:\", filteredStudents); // 디버깅용 로그\r\n                setStudents(filteredStudents);\r\n            })\r\n            .catch(error => console.error(\"Error fetching students:\", error));\r\n        }\r\n    }, [memberId]);\r\n\r\n    // ✅ 강좌 클릭 시 열림/닫힘 토글\r\n    const toggleCourse = (courseName) => {\r\n        setOpenCourses(prevState => ({\r\n            ...prevState,\r\n            [courseName]: !prevState[courseName]\r\n        }));\r\n    };\r\n\r\n    // ✅ 강좌별 그룹화 (강좌명 기준으로 학생 분류)\r\n    const groupedStudents = students.reduce((acc, student) => {\r\n        if (!acc[student.courseName]) acc[student.courseName] = [];\r\n        acc[student.courseName].push(student);\r\n        return acc;\r\n    }, {});\r\n\r\n    return (\r\n        <div className=\"student-manage-container\">\r\n            <h2>수강생 관리</h2>\r\n            <div className=\"course-list\">\r\n                {Object.keys(groupedStudents).map((courseName, index) => (\r\n                    <div key={index} className=\"course-item\">\r\n                        {/* ✅ 강좌명 클릭 시 학생 리스트 열림/닫힘 */}\r\n                        <div \r\n                            className=\"course-header\" \r\n                            onClick={() => toggleCourse(courseName)}\r\n                        >\r\n                            {courseName}\r\n                            <span className={`arrow ${openCourses[courseName] ? \"open\" : \"\"}`}>&#9662;</span>\r\n                        </div>\r\n                        {openCourses[courseName] && (\r\n                            <div className=\"student-list\">\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>학번</th>\r\n                                            <th>학생 이름</th>\r\n                                            <th>출석률</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {groupedStudents[courseName].map((student, idx) => (\r\n                                            <tr key={idx}>\r\n                                                <td>{student.studentId}</td>\r\n                                                <td>{student.studentName}</td>\r\n                                                <td>{student.attendanceRate}%</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentManagePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}