{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\ExamList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './ExamList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamList = () => {\n  _s();\n  const [exams, setExams] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const courseId = localStorage.getItem(\"courseId\");\n  useEffect(() => {\n    const fetchExams = async () => {\n      try {\n        const token = localStorage.getItem(\"token\"); // ✅ 저장된 토큰 가져오기\n        if (!token) {\n          console.error(\"❌ 토큰이 없습니다.\");\n          return;\n        }\n        const response = await axios.get(`http://localhost:8090/api/exams/select?courseId=${courseId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"✅ API 응답 데이터:\", response.data);\n        setExams(response.data || []);\n      } catch (error) {\n        var _error$response;\n        console.error(\"❌ axios 요청 오류:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchExams();\n  }, []);\n  const handleExamSelect = examId => {\n    navigate(`/exam/${examId}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC2DC\\uD5D8 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: exams.map(exam => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleExamSelect(exam.id),\n          children: exam.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, exam.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamList, \"0zHj6kivClj9ymRu+evR3SutKH4=\", false, function () {\n  return [useNavigate];\n});\n_c = ExamList;\nexport default ExamList;\nvar _c;\n$RefreshReg$(_c, \"ExamList\");","map":{"version":3,"names":["useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","ExamList","_s","exams","setExams","loading","setLoading","navigate","courseId","localStorage","getItem","fetchExams","token","console","error","response","get","headers","Authorization","log","data","_error$response","message","handleExamSelect","examId","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exam","onClick","id","title","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/ExamList.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './ExamList.css';\r\n\r\nconst ExamList = () => {\r\n  const [exams, setExams] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const courseId = localStorage.getItem(\"courseId\");\r\n  useEffect(() => {\r\n    const fetchExams = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\"); // ✅ 저장된 토큰 가져오기\r\n        if (!token) {\r\n          console.error(\"❌ 토큰이 없습니다.\");\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get(\r\n          `http://localhost:8090/api/exams/select?courseId=${courseId}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        console.log(\"✅ API 응답 데이터:\", response.data);\r\n        setExams(response.data || []);\r\n      } catch (error) {\r\n        console.error(\"❌ axios 요청 오류:\", error.response?.data || error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchExams();\r\n  }, []);\r\n\r\n  const handleExamSelect = (examId) => {\r\n    navigate(`/exam/${examId}`);\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>로딩 중...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>시험 목록</h1>\r\n      <ul>\r\n        {exams.map(exam => (\r\n          <li key={exam.id}>\r\n            <button onClick={() => handleExamSelect(exam.id)}>\r\n              {exam.title}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}