{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\survey\\\\CreateSurvey.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./CreateSurvey.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateSurvey = () => {\n  _s();\n  const token = localStorage.getItem(\"token\");\n\n  // 전역 제목: 모든 설문의 title에 공통 적용 (description은 개별 입력)\n  const [globalTitle, setGlobalTitle] = useState(\"\");\n\n  // 개별 설문: description과 선택지만 입력 (title은 전역 제목 사용)\n  const [surveyList, setSurveyList] = useState([{\n    description: \"\",\n    options: [\"\"]\n  }]);\n\n  // 전역 설정 (모든 설문에 동일하게 적용)\n  const [globalSurveyType, setGlobalSurveyType] = useState(\"\");\n  const [globalEndDays, setGlobalEndDays] = useState(\"\");\n  const [globalSelectedCourseId, setGlobalSelectedCourseId] = useState(\"\");\n  const [courses, setCourses] = useState([]);\n\n  // 제출 시 공통 시작 시간 (설문 시작 시간)\n  const [commonStartDate] = useState(new Date());\n\n  // 개별 설문 설명 변경 처리\n  const handleSurveyChange = (index, field, value) => {\n    const newSurveyList = [...surveyList];\n    newSurveyList[index][field] = value;\n    setSurveyList(newSurveyList);\n  };\n\n  // 개별 설문 선택지 변경 처리\n  const handleOptionChange = (index, optIndex, value) => {\n    const newSurveyList = [...surveyList];\n    newSurveyList[index].options[optIndex] = value;\n    setSurveyList(newSurveyList);\n  };\n  const addOption = index => {\n    const newSurveyList = [...surveyList];\n    newSurveyList[index].options.push(\"\");\n    setSurveyList(newSurveyList);\n  };\n  const removeOption = (index, optIndex) => {\n    const newSurveyList = [...surveyList];\n    if (newSurveyList[index].options.length > 1) {\n      newSurveyList[index].options.splice(optIndex, 1);\n      setSurveyList(newSurveyList);\n    }\n  };\n  const addSurveyForm = () => {\n    setSurveyList([...surveyList, {\n      description: \"\",\n      options: [\"\"]\n    }]);\n  };\n\n  // 전역 유형이 LECTURE_EVALUATION인 경우 강의 목록 한 번만 불러오기\n  useEffect(() => {\n    if (globalSurveyType === \"LECTURE_EVALUATION\" && courses.length === 0) {\n      const fetchCourses = async () => {\n        try {\n          const response = await fetch(\"http://localhost:8090/api/courses\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: token ? `Bearer ${token}` : \"\"\n            }\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setCourses(data);\n          } else {\n            console.error(\"강의 목록을 불러오지 못했습니다.\");\n          }\n        } catch (error) {\n          console.error(\"강의 목록 요청 중 오류:\", error);\n        }\n      };\n      fetchCourses();\n    }\n  }, [globalSurveyType, courses, token]);\n\n  // 종료 날짜 계산: 공통 시작 시간 + 종료 기간(일)\n  const computeEndDate = (start, days) => {\n    if (!start || !days) return null;\n    const dt = new Date(start);\n    dt.setDate(dt.getDate() + Number(days));\n    return dt;\n  };\n\n  // ISO 8601 형식으로 변환 (밀리초 제거)\n  const formatDateTime = date => {\n    return date ? date.toISOString().split(\".\")[0] : null;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // 전역 필드 유효성 검사\n    if (!globalSurveyType) {\n      alert(\"설문 유형을 선택해주세요.\");\n      return;\n    }\n    if (!globalEndDays) {\n      alert(\"종료 기간을 선택해주세요.\");\n      return;\n    }\n    if (globalSurveyType === \"LECTURE_EVALUATION\" && !globalSelectedCourseId) {\n      alert(\"강의 평가 설문인 경우, 강의를 반드시 선택해야 합니다.\");\n      return;\n    }\n    if (!globalTitle) {\n      alert(\"공통 설문 제목을 입력해주세요.\");\n      return;\n    }\n    const commonStartDateTime = commonStartDate;\n    for (const survey of surveyList) {\n      const computedEndDate = computeEndDate(commonStartDateTime, globalEndDays);\n      // title은 전역 제목, description은 개별 입력값 사용\n      const surveyData = {\n        title: globalTitle,\n        description: survey.description,\n        options: survey.options.join(\", \"),\n        isActive: true,\n        surveyType: globalSurveyType,\n        startDate: formatDateTime(commonStartDateTime),\n        endDate: formatDateTime(computedEndDate),\n        courseId: globalSurveyType === \"LECTURE_EVALUATION\" ? Number(globalSelectedCourseId) : null\n      };\n      try {\n        const response = await fetch(\"http://localhost:8090/api/surveys/addsurvey\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token ? `Bearer ${token}` : \"\"\n          },\n          body: JSON.stringify(surveyData)\n        });\n        if (!response.ok) {\n          throw new Error(\"설문 추가 실패\");\n        }\n      } catch (error) {\n        console.error(\"설문 추가 중 오류 발생:\", error);\n        alert(\"설문 추가 중 오류가 발생했습니다.\");\n        return;\n      }\n    }\n    alert(\"모든 설문이 성공적으로 추가되었습니다!\");\n    // 제출 후 상태 초기화\n    setSurveyList([{\n      description: \"\",\n      options: [\"\"]\n    }]);\n    setGlobalSurveyType(\"\");\n    setGlobalEndDays(\"\");\n    setGlobalSelectedCourseId(\"\");\n    setGlobalTitle(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-survey-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC5EC\\uB7EC \\uC124\\uBB38 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"common-questions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uACF5\\uD1B5 \\uC124\\uBB38 \\uC81C\\uBAA9:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: globalTitle,\n            onChange: e => setGlobalTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uC124\\uBB38 \\uC720\\uD615:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: globalSurveyType,\n            onChange: e => setGlobalSurveyType(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"-- \\uC124\\uBB38 \\uC720\\uD615 \\uC120\\uD0DD --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"MEAL_SURVEY\",\n              children: \"\\uAE09\\uC2DD \\uB9CC\\uC871\\uB3C4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ACADEMIC_SURVEY\",\n              children: \"\\uD559\\uAD50 \\uC6B4\\uC601\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"LECTURE_EVALUATION\",\n              children: \"\\uAC15\\uC758 \\uD3C9\\uAC00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"GENERAL_SURVEY\",\n              children: \"\\uC77C\\uBC18 \\uC124\\uBB38\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), globalSurveyType === \"LECTURE_EVALUATION\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uAC15\\uC758 \\uC120\\uD0DD:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: globalSelectedCourseId,\n            onChange: e => setGlobalSelectedCourseId(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"-- \\uAC15\\uC758\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694 --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: course.id,\n              children: course.name\n            }, course.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uC885\\uB8CC \\uAE30\\uAC04 (\\uC2DC\\uC791\\uC77C\\uB85C\\uBD80\\uD130 \\uBA87 \\uC77C \\uD6C4):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: globalEndDays,\n            onChange: e => setGlobalEndDays(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"-- \\uC885\\uB8CC \\uAE30\\uAC04 \\uC120\\uD0DD --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), Array.from({\n              length: 14\n            }, (_, i) => i + 1).map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: day,\n              children: [day, \"\\uC77C \\uD6C4\"]\n            }, day, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"individual-questions\",\n        children: [surveyList.map((survey, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"survey-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uC124\\uBB38 \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uC124\\uBB38 \\uC124\\uBA85:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: survey.description,\n              onChange: e => handleSurveyChange(index, \"description\", e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uC124\\uBB38 \\uC120\\uD0DD\\uC9C0:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-container\",\n              children: [survey.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: option,\n                  onChange: e => handleOptionChange(index, optIndex, e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this), survey.options.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"remove-btn\",\n                  onClick: () => removeOption(index, optIndex),\n                  children: \"\\uC81C\\uAC70\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 25\n                }, this)]\n              }, optIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-buttons\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => addOption(index),\n                  children: \"\\uC120\\uD0DD\\uC9C0 \\uCD94\\uAC00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addSurveyForm,\n          children: \"\\uC124\\uBB38 \\uD3FC \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"\\uBAA8\\uB4E0 \\uC124\\uBB38 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateSurvey, \"hZuX7QVXd6gL24iRrdmNTc953eE=\");\n_c = CreateSurvey;\nexport default CreateSurvey;\nvar _c;\n$RefreshReg$(_c, \"CreateSurvey\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CreateSurvey","_s","token","localStorage","getItem","globalTitle","setGlobalTitle","surveyList","setSurveyList","description","options","globalSurveyType","setGlobalSurveyType","globalEndDays","setGlobalEndDays","globalSelectedCourseId","setGlobalSelectedCourseId","courses","setCourses","commonStartDate","Date","handleSurveyChange","index","field","value","newSurveyList","handleOptionChange","optIndex","addOption","push","removeOption","length","splice","addSurveyForm","fetchCourses","response","fetch","headers","Authorization","ok","data","json","console","error","computeEndDate","start","days","dt","setDate","getDate","Number","formatDateTime","date","toISOString","split","handleSubmit","e","preventDefault","alert","commonStartDateTime","survey","computedEndDate","surveyData","title","join","isActive","surveyType","startDate","endDate","courseId","method","body","JSON","stringify","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","required","disabled","map","course","id","name","Array","from","_","i","day","option","onClick","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/survey/CreateSurvey.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./CreateSurvey.css\";\r\n\r\nconst CreateSurvey = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  \r\n  // 전역 제목: 모든 설문의 title에 공통 적용 (description은 개별 입력)\r\n  const [globalTitle, setGlobalTitle] = useState(\"\");\r\n  \r\n  // 개별 설문: description과 선택지만 입력 (title은 전역 제목 사용)\r\n  const [surveyList, setSurveyList] = useState([{ description: \"\", options: [\"\"] }]);\r\n  \r\n  // 전역 설정 (모든 설문에 동일하게 적용)\r\n  const [globalSurveyType, setGlobalSurveyType] = useState(\"\");\r\n  const [globalEndDays, setGlobalEndDays] = useState(\"\");\r\n  const [globalSelectedCourseId, setGlobalSelectedCourseId] = useState(\"\");\r\n  const [courses, setCourses] = useState([]);\r\n  \r\n  // 제출 시 공통 시작 시간 (설문 시작 시간)\r\n  const [commonStartDate] = useState(new Date());\r\n  \r\n  // 개별 설문 설명 변경 처리\r\n  const handleSurveyChange = (index, field, value) => {\r\n    const newSurveyList = [...surveyList];\r\n    newSurveyList[index][field] = value;\r\n    setSurveyList(newSurveyList);\r\n  };\r\n\r\n  // 개별 설문 선택지 변경 처리\r\n  const handleOptionChange = (index, optIndex, value) => {\r\n    const newSurveyList = [...surveyList];\r\n    newSurveyList[index].options[optIndex] = value;\r\n    setSurveyList(newSurveyList);\r\n  };\r\n\r\n  const addOption = (index) => {\r\n    const newSurveyList = [...surveyList];\r\n    newSurveyList[index].options.push(\"\");\r\n    setSurveyList(newSurveyList);\r\n  };\r\n\r\n  const removeOption = (index, optIndex) => {\r\n    const newSurveyList = [...surveyList];\r\n    if (newSurveyList[index].options.length > 1) {\r\n      newSurveyList[index].options.splice(optIndex, 1);\r\n      setSurveyList(newSurveyList);\r\n    }\r\n  };\r\n\r\n  const addSurveyForm = () => {\r\n    setSurveyList([...surveyList, { description: \"\", options: [\"\"] }]);\r\n  };\r\n\r\n  // 전역 유형이 LECTURE_EVALUATION인 경우 강의 목록 한 번만 불러오기\r\n  useEffect(() => {\r\n    if (globalSurveyType === \"LECTURE_EVALUATION\" && courses.length === 0) {\r\n      const fetchCourses = async () => {\r\n        try {\r\n          const response = await fetch(\"http://localhost:8090/api/courses\", {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: token ? `Bearer ${token}` : \"\",\r\n            },\r\n          });\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setCourses(data);\r\n          } else {\r\n            console.error(\"강의 목록을 불러오지 못했습니다.\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"강의 목록 요청 중 오류:\", error);\r\n        }\r\n      };\r\n      fetchCourses();\r\n    }\r\n  }, [globalSurveyType, courses, token]);\r\n\r\n  // 종료 날짜 계산: 공통 시작 시간 + 종료 기간(일)\r\n  const computeEndDate = (start, days) => {\r\n    if (!start || !days) return null;\r\n    const dt = new Date(start);\r\n    dt.setDate(dt.getDate() + Number(days));\r\n    return dt;\r\n  };\r\n\r\n  // ISO 8601 형식으로 변환 (밀리초 제거)\r\n  const formatDateTime = (date) => {\r\n    return date ? date.toISOString().split(\".\")[0] : null;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // 전역 필드 유효성 검사\r\n    if (!globalSurveyType) {\r\n      alert(\"설문 유형을 선택해주세요.\");\r\n      return;\r\n    }\r\n    if (!globalEndDays) {\r\n      alert(\"종료 기간을 선택해주세요.\");\r\n      return;\r\n    }\r\n    if (globalSurveyType === \"LECTURE_EVALUATION\" && !globalSelectedCourseId) {\r\n      alert(\"강의 평가 설문인 경우, 강의를 반드시 선택해야 합니다.\");\r\n      return;\r\n    }\r\n    if (!globalTitle) {\r\n      alert(\"공통 설문 제목을 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n    const commonStartDateTime = commonStartDate;\r\n    for (const survey of surveyList) {\r\n      const computedEndDate = computeEndDate(commonStartDateTime, globalEndDays);\r\n      // title은 전역 제목, description은 개별 입력값 사용\r\n      const surveyData = {\r\n        title: globalTitle,\r\n        description: survey.description,\r\n        options: survey.options.join(\", \"),\r\n        isActive: true,\r\n        surveyType: globalSurveyType,\r\n        startDate: formatDateTime(commonStartDateTime),\r\n        endDate: formatDateTime(computedEndDate),\r\n        courseId: globalSurveyType === \"LECTURE_EVALUATION\" ? Number(globalSelectedCourseId) : null,\r\n      };\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:8090/api/surveys/addsurvey\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: token ? `Bearer ${token}` : \"\",\r\n          },\r\n          body: JSON.stringify(surveyData),\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(\"설문 추가 실패\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"설문 추가 중 오류 발생:\", error);\r\n        alert(\"설문 추가 중 오류가 발생했습니다.\");\r\n        return;\r\n      }\r\n    }\r\n    \r\n    alert(\"모든 설문이 성공적으로 추가되었습니다!\");\r\n    // 제출 후 상태 초기화\r\n    setSurveyList([{ description: \"\", options: [\"\"] }]);\r\n    setGlobalSurveyType(\"\");\r\n    setGlobalEndDays(\"\");\r\n    setGlobalSelectedCourseId(\"\");\r\n    setGlobalTitle(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-survey-container\">\r\n      <h2>여러 설문 추가</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* 전역(공통) 질문 영역 */}\r\n        <div className=\"common-questions\">\r\n          <div className=\"form-group\">\r\n            <label>공통 설문 제목:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={globalTitle}\r\n              onChange={(e) => setGlobalTitle(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>설문 유형:</label>\r\n            <select\r\n              value={globalSurveyType}\r\n              onChange={(e) => setGlobalSurveyType(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\" disabled>\r\n                -- 설문 유형 선택 --\r\n              </option>\r\n              <option value=\"MEAL_SURVEY\">급식 만족도</option>\r\n              <option value=\"ACADEMIC_SURVEY\">학교 운영</option>\r\n              <option value=\"LECTURE_EVALUATION\">강의 평가</option>\r\n              <option value=\"GENERAL_SURVEY\">일반 설문</option>\r\n            </select>\r\n          </div>\r\n          {globalSurveyType === \"LECTURE_EVALUATION\" && (\r\n            <div className=\"form-group\">\r\n              <label>강의 선택:</label>\r\n              <select\r\n                value={globalSelectedCourseId}\r\n                onChange={(e) => setGlobalSelectedCourseId(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled>\r\n                  -- 강의를 선택하세요 --\r\n                </option>\r\n                {courses.map((course) => (\r\n                  <option key={course.id} value={course.id}>\r\n                    {course.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n          <div className=\"form-group\">\r\n            <label>종료 기간 (시작일로부터 몇 일 후):</label>\r\n            <select\r\n              value={globalEndDays}\r\n              onChange={(e) => setGlobalEndDays(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\" disabled>\r\n                -- 종료 기간 선택 --\r\n              </option>\r\n              {Array.from({ length: 14 }, (_, i) => i + 1).map((day) => (\r\n                <option key={day} value={day}>\r\n                  {day}일 후\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 개별 질문 영역 */}\r\n        <div className=\"individual-questions\">\r\n          {surveyList.map((survey, index) => (\r\n            <div key={index} className=\"survey-form\">\r\n              <h3>설문 {index + 1}</h3>\r\n              <div className=\"form-group\">\r\n                <label>설문 설명:</label>\r\n                <textarea\r\n                  value={survey.description}\r\n                  onChange={(e) => handleSurveyChange(index, \"description\", e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>설문 선택지:</label>\r\n                <div className=\"options-container\">\r\n                  {survey.options.map((option, optIndex) => (\r\n                    <div key={optIndex} className=\"option-item\">\r\n                      <input\r\n                        type=\"text\"\r\n                        value={option}\r\n                        onChange={(e) =>\r\n                          handleOptionChange(index, optIndex, e.target.value)\r\n                        }\r\n                        required\r\n                      />\r\n                      {survey.options.length > 1 && (\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"remove-btn\"\r\n                          onClick={() => removeOption(index, optIndex)}\r\n                        >\r\n                          제거\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  <div className=\"option-buttons\">\r\n                    <button type=\"button\" onClick={() => addOption(index)}>\r\n                      선택지 추가\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <button type=\"button\" onClick={addSurveyForm}>\r\n            설문 폼 추가\r\n          </button>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"submit-btn\">\r\n          모든 설문 생성\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateSurvey;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}