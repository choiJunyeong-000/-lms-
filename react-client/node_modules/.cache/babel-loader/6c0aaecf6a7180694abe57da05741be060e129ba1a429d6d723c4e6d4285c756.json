{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onLogin\n}) {\n  _s();\n  const [credentials, setCredentials] = useState({\n    studentId: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({\n      ...credentials,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:8090/api/users/login\", credentials, {\n        withCredentials: true\n      });\n      console.log(\"Login successful:\", response.data);\n      const token = response.data; // 서버에서 토큰만 반환하는 경우\n      localStorage.setItem(\"token\", token);\n\n      // ✅ JWT에서 role 추출하는 함수 호출\n      const role = extractRoleFromToken(token);\n      const studentId = extractStudentIdFromToken(token);\n      localStorage.setItem(\"role\", role);\n      localStorage.setItem(\"studentId\", studentId);\n      onLogin(role); // 로그인 성공 시 역할 정보 전달\n      navigate('/portal'); // 로그인 성공 시 포털 시스템 선택 페이지로 이동\n    } catch (error) {\n      if (error.response && error.response.data) {\n        alert(error.response.data); // 서버에서 반환한 오류 메시지 표시\n      } else {\n        console.error(\"Login failed:\", error);\n      }\n    }\n  };\n\n  // ✅ JWT에서 role을 추출하는 함수 추가\n  const extractRoleFromToken = token => {\n    try {\n      const payload = JSON.parse(atob(token.split(\".\")[1])); // JWT의 payload 부분 해석\n      return payload.role; // ✅ role 값 반환\n    } catch (error) {\n      console.error(\"Error extracting role from token:\", error);\n      return null;\n    }\n  };\n\n  // ✅ JWT에서 student_id를 추출하는 함수 추가\n  const extractStudentIdFromToken = token => {\n    try {\n      const payload = JSON.parse(atob(token.split(\".\")[1])); // JWT payload 디코딩\n      console.log(\"Decoded JWT payload:\", payload); // 디버깅용 출력\n      return payload.sub;\n    } catch (error) {\n      console.error(\"Error extracting studentId from token:\", error);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://www.cuk.edu/type/common/img/kor/info/coperUniv_logo17.png\",\n        alt: \"\\uC6B0\\uC1A1\\uB300\\uD559\\uAD50 \\uB85C\\uACE0\",\n        className: \"login-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"login-title\",\n        children: \"\\uC6B0\\uC1A1\\uB300\\uD559\\uAD50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"studentId\",\n            children: \"\\uC544\\uC774\\uB514\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"studentId\",\n            name: \"studentId\",\n            value: credentials.studentId,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: credentials.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"5ZUBsLDBZhEgpGP41t37AnxxY5E=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Login","onLogin","_s","credentials","setCredentials","studentId","password","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","response","post","withCredentials","console","log","data","token","localStorage","setItem","role","extractRoleFromToken","extractStudentIdFromToken","error","alert","payload","JSON","parse","atob","split","sub","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\n\n\n\nfunction Login({ onLogin }) {\n  const [credentials, setCredentials] = useState({ studentId: '', password: '' });\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCredentials({ ...credentials, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:8090/api/users/login\", credentials, { withCredentials: true });\n  \n      console.log(\"Login successful:\", response.data);\n  \n      const token = response.data; // 서버에서 토큰만 반환하는 경우\n      localStorage.setItem(\"token\", token);\n  \n      // ✅ JWT에서 role 추출하는 함수 호출\n      const role = extractRoleFromToken(token);\n      const studentId = extractStudentIdFromToken(token);\n\n      localStorage.setItem(\"role\", role);\n      localStorage.setItem(\"studentId\", studentId);\n  \n      onLogin(role); // 로그인 성공 시 역할 정보 전달\n      navigate('/portal'); // 로그인 성공 시 포털 시스템 선택 페이지로 이동\n    } catch (error) {\n      if (error.response && error.response.data) {\n        alert(error.response.data); // 서버에서 반환한 오류 메시지 표시\n      } else {\n        console.error(\"Login failed:\", error);\n      }\n    }\n  };\n\n  \n  \n  // ✅ JWT에서 role을 추출하는 함수 추가\n  const extractRoleFromToken = (token) => {\n    try {\n      const payload = JSON.parse(atob(token.split(\".\")[1])); // JWT의 payload 부분 해석\n      return payload.role; // ✅ role 값 반환\n    } catch (error) {\n      console.error(\"Error extracting role from token:\", error);\n      return null;\n    }\n  };\n\n  // ✅ JWT에서 student_id를 추출하는 함수 추가\n  const extractStudentIdFromToken = (token) => {\n    try {\n      const payload = JSON.parse(atob(token.split(\".\")[1])); // JWT payload 디코딩\n      console.log(\"Decoded JWT payload:\", payload); // 디버깅용 출력\n      return payload.sub\n    } catch (error) {\n      console.error(\"Error extracting studentId from token:\", error);\n      return null;\n    }\n  };\n  \n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-header\">\n        <img src=\"https://www.cuk.edu/type/common/img/kor/info/coperUniv_logo17.png\" alt=\"우송대학교 로고\" className=\"login-logo\" />\n        <h1 className=\"login-title\">우송대학교</h1>\n      </div>\n      <div className=\"login-box\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"studentId\">아이디</label>\n            <input\n              type=\"text\"\n              id=\"studentId\"\n              name=\"studentId\"\n              value={credentials.studentId}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">비밀번호</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={credentials.password}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"login-button\">로그인</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}