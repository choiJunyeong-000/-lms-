{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\StudentAttendance.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentAttendance = () => {\n  _s();\n  const [attendanceData, setAttendanceData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token')); // token 상태로 관리\n  const studentId = localStorage.getItem('studentId'); // studentId를 로컬스토리지에서 가져옴\n\n  useEffect(() => {\n    const fetchAttendance = async () => {\n      if (!studentId) {\n        console.error(\"studentId가 없습니다.\");\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:8090/api/attendance/student`, {\n          params: {\n            studentId\n          },\n          // 쿼리 파라미터로 studentId 전달\n          headers: {\n            Authorization: `Bearer ${token}`\n          } // 토큰 헤더로 전달\n        });\n        setAttendanceData(response.data);\n      } catch (error) {\n        console.error(\"출석 데이터를 불러오는 중 오류 발생:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (token && studentId) {\n      // 토큰과 studentId가 있을 경우에만 출석 데이터 가져오기\n      fetchAttendance();\n    } else {\n      console.error(\"로그인이 필요하거나 studentId가 없습니다.\");\n    }\n  }, [studentId, token]); // studentId나 token이 변경될 때마다 실행\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uB85C\\uB529 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n  if (!attendanceData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uCD9C\\uC11D \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uCD9C\\uC11D\\uBD80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uAC15\\uC758 ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uCD9C\\uC11D \\uC5EC\\uBD80\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC9C4\\uB3C4\\uC728\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(attendanceData.attendance).map(courseId => {\n          var _attendanceData$progr;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: courseId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: attendanceData.attendance[courseId] ? \"출석 완료\" : \"미출석\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [((_attendanceData$progr = attendanceData.progress[courseId]) === null || _attendanceData$progr === void 0 ? void 0 : _attendanceData$progr.toFixed(2)) || \"0\", \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, courseId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentAttendance, \"lSJR8aVl0bwOIY3MluTqQlqd0YQ=\");\n_c = StudentAttendance;\nexport default StudentAttendance;\nvar _c;\n$RefreshReg$(_c, \"StudentAttendance\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","StudentAttendance","_s","attendanceData","setAttendanceData","loading","setLoading","token","setToken","localStorage","getItem","studentId","fetchAttendance","console","error","response","get","params","headers","Authorization","data","children","fileName","_jsxFileName","lineNumber","columnNumber","border","Object","keys","attendance","map","courseId","_attendanceData$progr","progress","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/StudentAttendance.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst StudentAttendance = () => {\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));  // token 상태로 관리\r\n  const studentId = localStorage.getItem('studentId');  // studentId를 로컬스토리지에서 가져옴\r\n\r\n  useEffect(() => {\r\n    const fetchAttendance = async () => {\r\n      if (!studentId) {\r\n        console.error(\"studentId가 없습니다.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`http://localhost:8090/api/attendance/student`, {\r\n          params: { studentId },  // 쿼리 파라미터로 studentId 전달\r\n          headers: { Authorization: `Bearer ${token}` },  // 토큰 헤더로 전달\r\n        });\r\n        setAttendanceData(response.data);\r\n      } catch (error) {\r\n        console.error(\"출석 데이터를 불러오는 중 오류 발생:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (token && studentId) {  // 토큰과 studentId가 있을 경우에만 출석 데이터 가져오기\r\n      fetchAttendance();\r\n    } else {\r\n      console.error(\"로그인이 필요하거나 studentId가 없습니다.\");\r\n    }\r\n  }, [studentId, token]); // studentId나 token이 변경될 때마다 실행\r\n\r\n  if (loading) return <p>로딩 중...</p>;\r\n  if (!attendanceData) return <p>출석 데이터가 없습니다.</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>출석부</h2>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>강의 ID</th>\r\n            <th>출석 여부</th>\r\n            <th>진도율</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(attendanceData.attendance).map(courseId => (\r\n            <tr key={courseId}>\r\n              <td>{courseId}</td>\r\n              <td>{attendanceData.attendance[courseId] ? \"출석 완료\" : \"미출석\"}</td>\r\n              <td>{attendanceData.progress[courseId]?.toFixed(2) || \"0\"}%</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentAttendance;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAE;EACpE,MAAMC,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAE;;EAEtDd,SAAS,CAAC,MAAM;IACd,MAAMgB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI,CAACD,SAAS,EAAE;QACdE,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;QACjC;MACF;MAEA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,8CAA8C,EAAE;UAC/EC,MAAM,EAAE;YAAEN;UAAU,CAAC;UAAG;UACxBO,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUZ,KAAK;UAAG,CAAC,CAAG;QAClD,CAAC,CAAC;QACFH,iBAAiB,CAACW,QAAQ,CAACK,IAAI,CAAC;MAClC,CAAC,CAAC,OAAON,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,SAAS;QACRR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAIC,KAAK,IAAII,SAAS,EAAE;MAAG;MACzBC,eAAe,CAAC,CAAC;IACnB,CAAC,MAAM;MACLC,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;IAC9C;EACF,CAAC,EAAE,CAACH,SAAS,EAAEJ,KAAK,CAAC,CAAC,CAAC,CAAC;;EAExB,IAAIF,OAAO,EAAE,oBAAOL,OAAA;IAAAqB,QAAA,EAAG;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAClC,IAAI,CAACtB,cAAc,EAAE,oBAAOH,OAAA;IAAAqB,QAAA,EAAG;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEhD,oBACEzB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZzB,OAAA;MAAO0B,MAAM,EAAC,GAAG;MAAAL,QAAA,gBACfrB,OAAA;QAAAqB,QAAA,eACErB,OAAA;UAAAqB,QAAA,gBACErB,OAAA;YAAAqB,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdzB,OAAA;YAAAqB,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdzB,OAAA;YAAAqB,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRzB,OAAA;QAAAqB,QAAA,EACGM,MAAM,CAACC,IAAI,CAACzB,cAAc,CAAC0B,UAAU,CAAC,CAACC,GAAG,CAACC,QAAQ;UAAA,IAAAC,qBAAA;UAAA,oBAClDhC,OAAA;YAAAqB,QAAA,gBACErB,OAAA;cAAAqB,QAAA,EAAKU;YAAQ;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnBzB,OAAA;cAAAqB,QAAA,EAAKlB,cAAc,CAAC0B,UAAU,CAACE,QAAQ,CAAC,GAAG,OAAO,GAAG;YAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChEzB,OAAA;cAAAqB,QAAA,GAAK,EAAAW,qBAAA,GAAA7B,cAAc,CAAC8B,QAAQ,CAACF,QAAQ,CAAC,cAAAC,qBAAA,uBAAjCA,qBAAA,CAAmCE,OAAO,CAAC,CAAC,CAAC,KAAI,GAAG,EAAC,GAAC;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAHzDM,QAAQ;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIb,CAAC;QAAA,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACvB,EAAA,CA3DID,iBAAiB;AAAAkC,EAAA,GAAjBlC,iBAAiB;AA6DvB,eAAeA,iBAAiB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}