{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\VideoDetailPage.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoDetailPage = ({\n  videoUrl,\n  studentId,\n  courseId,\n  week,\n  token\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const [isChecked, setIsChecked] = useState(false);\n  const [lastSavedProgress, setLastSavedProgress] = useState(0);\n  const progressSaveInterval = 1; // 1초마다 진도율 저장\n  const ATTENDANCE_THRESHOLD = 90; // 출석 인정 기준 시청률 (90%)\n  const [content, setContent] = useState(null);\n  useEffect(() => {\n    // 초기 출석 상태 확인\n    const checkAttendanceStatus = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8090/api/attendance/status?studentId=${studentId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // courseId가 키인 맵에서 출석 상태를 확인\n        if (response.data[courseId] === true) {\n          setIsChecked(true);\n        }\n      } catch (error) {\n        console.error(\"출석 상태 확인 실패\", error);\n      }\n    };\n\n    // 이전 시청 진도율 확인\n    const checkProgressStatus = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8090/api/attendance/progress/status?studentId=${studentId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // courseId가 키인 맵에서 진도율 확인\n        if (response.data[courseId]) {\n          setLastSavedProgress(response.data[courseId]);\n\n          // 동영상 시간 설정 (비디오가 로드된 후에 실행)\n          if (videoRef.current) {\n            const duration = videoRef.current.duration;\n            if (!isNaN(duration)) {\n              videoRef.current.currentTime = response.data[courseId] / 100 * duration;\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"진도율 확인 실패\", error);\n      }\n    };\n    checkAttendanceStatus();\n    checkProgressStatus();\n  }, [studentId, courseId, token]);\n\n  // 비디오 메타데이터 로드 완료 후 진도율에 따라 영상 위치 설정\n  const handleLoadedMetadata = () => {\n    if (videoRef.current && lastSavedProgress > 0) {\n      const duration = videoRef.current.duration;\n      videoRef.current.currentTime = lastSavedProgress / 100 * duration;\n    }\n  };\n  useEffect(() => {\n    const savedContent = sessionStorage.getItem(\"videoContent\");\n    if (savedContent) {\n      setContent(JSON.parse(savedContent));\n    }\n  }, []);\n\n  // 주기적으로 진도율 저장 (10초마다)\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      saveCurrentProgress();\n    }, progressSaveInterval * 100);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // 현재 진도율 저장\n  const saveCurrentProgress = async () => {\n    if (!videoRef.current) return;\n    const video = videoRef.current;\n    const watchedPercentage = video.currentTime / video.duration * 100;\n\n    // 이미 출석이 완료되었거나 진도율이 0인 경우 저장하지 않음\n    if (isChecked || watchedPercentage === 0) return;\n    try {\n      // 진도율 저장 API 호출 (이 API 엔드포인트는 Spring 컨트롤러에 없으므로 생략하거나 수정 필요)\n      console.log(\"진도율 저장: \", watchedPercentage);\n      setLastSavedProgress(watchedPercentage);\n    } catch (error) {\n      console.error(\"진도율 저장 실패\", error);\n    }\n  };\n\n  // 영상 시청 중 처리\n  const handleTimeUpdate = async () => {\n    if (!videoRef.current) return;\n    const video = videoRef.current;\n    const watchedPercentage = video.currentTime / video.duration * 100;\n\n    // 출석 완료 조건 확인 (90% 이상 시청 && 아직 출석 체크 안함)\n    if (watchedPercentage >= ATTENDANCE_THRESHOLD && !isChecked) {\n      try {\n        const response = await axios.post(\"http://localhost:8090/api/attendance/course\", {\n          studentId,\n          courseId,\n          watchedPercentage\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data === \"출석 완료\") {\n          setIsChecked(true);\n        }\n      } catch (error) {\n        console.error(\"강의 출석 체크 실패\", error);\n      }\n    }\n  };\n\n  // 수동 출석 체크 (강의 단위)\n  const handleCourseAttendance = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:8090/api/attendance/course\", {\n        studentId,\n        courseId,\n        watchedPercentage: 100\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data === \"출석 완료\") {\n        setIsChecked(true);\n      }\n    } catch (error) {\n      console.error(\"강의 출석 체크 실패\", error);\n    }\n  };\n  if (!content) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }, this);\n  }\n  return console.log(content.filePath), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-player-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      controls: true,\n      autoPlay: true,\n      onTimeUpdate: handleTimeUpdate,\n      onLoadedMetadata: handleLoadedMetadata,\n      width: \"640\",\n      height: \"360\",\n      className: \"main-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: content === null || content === void 0 ? void 0 : content.filePath,\n        type: `video/${videoUrl === null || videoUrl === void 0 ? void 0 : videoUrl.split('.').pop().toLowerCase()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 3\n      }, this), \"\\uBE0C\\uB77C\\uC6B0\\uC800\\uAC00 \\uBE44\\uB514\\uC624 \\uD0DC\\uADF8\\uB97C \\uC9C0\\uC6D0\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendance-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-info\",\n        children: [\"\\uD604\\uC7AC \\uC9C4\\uB3C4\\uC728: \", lastSavedProgress.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"attendance-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isChecked,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), \"\\uCD9C\\uC11D \\uC644\\uB8CC \", isChecked ? '✓' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), !isChecked && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"attendance-button\",\n        onClick: handleCourseAttendance,\n        children: \"\\uC218\\uB3D9 \\uCD9C\\uC11D \\uCCB4\\uD06C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 7\n  }, this);\n};\n_s(VideoDetailPage, \"FiFYDxnuyUXuSLXety4HySsFLA8=\");\n_c = VideoDetailPage;\nexport default VideoDetailPage;\nvar _c;\n$RefreshReg$(_c, \"VideoDetailPage\");","map":{"version":3,"names":["useRef","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","VideoDetailPage","videoUrl","studentId","courseId","week","token","_s","videoRef","isChecked","setIsChecked","lastSavedProgress","setLastSavedProgress","progressSaveInterval","ATTENDANCE_THRESHOLD","content","setContent","checkAttendanceStatus","response","get","headers","Authorization","data","error","console","checkProgressStatus","current","duration","isNaN","currentTime","handleLoadedMetadata","savedContent","sessionStorage","getItem","JSON","parse","intervalId","setInterval","saveCurrentProgress","clearInterval","video","watchedPercentage","log","handleTimeUpdate","post","handleCourseAttendance","children","fileName","_jsxFileName","lineNumber","columnNumber","filePath","className","ref","controls","autoPlay","onTimeUpdate","onLoadedMetadata","width","height","src","type","split","pop","toLowerCase","toFixed","checked","readOnly","onClick","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/VideoDetailPage.js"],"sourcesContent":["import { useRef,useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst VideoDetailPage = ({ videoUrl, studentId, courseId, week, token }) => {\r\n    const videoRef = useRef(null);\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [lastSavedProgress, setLastSavedProgress] = useState(0);\r\n    const progressSaveInterval = 1; // 1초마다 진도율 저장\r\n    const ATTENDANCE_THRESHOLD = 90; // 출석 인정 기준 시청률 (90%)\r\n    const [content, setContent] = useState(null);\r\n\r\n    useEffect(() => {\r\n      // 초기 출석 상태 확인\r\n      const checkAttendanceStatus = async () => {\r\n        try {\r\n          const response = await axios.get(\r\n            `http://localhost:8090/api/attendance/status?studentId=${studentId}`,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          \r\n          // courseId가 키인 맵에서 출석 상태를 확인\r\n          if (response.data[courseId] === true) {\r\n            setIsChecked(true);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"출석 상태 확인 실패\", error);\r\n        }\r\n      };\r\n    \r\n      \r\n      // 이전 시청 진도율 확인\r\n      const checkProgressStatus = async () => {\r\n        try {\r\n          const response = await axios.get(\r\n            `http://localhost:8090/api/attendance/progress/status?studentId=${studentId}`,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          \r\n          // courseId가 키인 맵에서 진도율 확인\r\n          if (response.data[courseId]) {\r\n            setLastSavedProgress(response.data[courseId]);\r\n            \r\n            // 동영상 시간 설정 (비디오가 로드된 후에 실행)\r\n            if (videoRef.current) {\r\n              const duration = videoRef.current.duration;\r\n              if (!isNaN(duration)) {\r\n                videoRef.current.currentTime = (response.data[courseId] / 100) * duration;\r\n              }\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"진도율 확인 실패\", error);\r\n        }\r\n      };\r\n      \r\n      checkAttendanceStatus();\r\n      checkProgressStatus();\r\n    }, [studentId, courseId, token]);\r\n  \r\n    // 비디오 메타데이터 로드 완료 후 진도율에 따라 영상 위치 설정\r\n    const handleLoadedMetadata = () => {\r\n      if (videoRef.current && lastSavedProgress > 0) {\r\n        const duration = videoRef.current.duration;\r\n        videoRef.current.currentTime = (lastSavedProgress / 100) * duration;\r\n      }\r\n    };\r\n    useEffect(() => {\r\n        const savedContent = sessionStorage.getItem(\"videoContent\");\r\n        if (savedContent) {\r\n          setContent(JSON.parse(savedContent));\r\n        }\r\n      }, []);\r\n\r\n      \r\n    \r\n    // 주기적으로 진도율 저장 (10초마다)\r\n    useEffect(() => {\r\n      const intervalId = setInterval(() => {\r\n        saveCurrentProgress();\r\n      }, progressSaveInterval * 100);\r\n      \r\n      return () => clearInterval(intervalId);\r\n    }, []);\r\n    \r\n    // 현재 진도율 저장\r\n    const saveCurrentProgress = async () => {\r\n      if (!videoRef.current) return;\r\n      \r\n      const video = videoRef.current;\r\n      const watchedPercentage = (video.currentTime / video.duration) * 100;\r\n      \r\n      // 이미 출석이 완료되었거나 진도율이 0인 경우 저장하지 않음\r\n      if (isChecked || watchedPercentage === 0) return;\r\n      \r\n      try {\r\n        // 진도율 저장 API 호출 (이 API 엔드포인트는 Spring 컨트롤러에 없으므로 생략하거나 수정 필요)\r\n        console.log(\"진도율 저장: \", watchedPercentage);\r\n        \r\n        setLastSavedProgress(watchedPercentage);\r\n      } catch (error) {\r\n        console.error(\"진도율 저장 실패\", error);\r\n      }\r\n    };\r\n    \r\n    // 영상 시청 중 처리\r\n    const handleTimeUpdate = async () => {\r\n      if (!videoRef.current) return;\r\n      \r\n      const video = videoRef.current;\r\n      const watchedPercentage = (video.currentTime / video.duration) * 100;\r\n      \r\n      // 출석 완료 조건 확인 (90% 이상 시청 && 아직 출석 체크 안함)\r\n      if (watchedPercentage >= ATTENDANCE_THRESHOLD && !isChecked) {\r\n        try {\r\n          const response = await axios.post(\r\n            \"http://localhost:8090/api/attendance/course\",\r\n            { \r\n              studentId, \r\n              courseId, \r\n              watchedPercentage \r\n            },\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          \r\n          if (response.data === \"출석 완료\") {\r\n            setIsChecked(true);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"강의 출석 체크 실패\", error);\r\n        }\r\n      }\r\n    };\r\n  \r\n    // 수동 출석 체크 (강의 단위)\r\n    const handleCourseAttendance = async () => {\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://localhost:8090/api/attendance/course\",\r\n          { \r\n            studentId, \r\n            courseId, \r\n            watchedPercentage: 100 \r\n          },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        \r\n        if (response.data === \"출석 완료\") {\r\n          setIsChecked(true);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"강의 출석 체크 실패\", error);\r\n      }\r\n    };\r\n    if (!content) {\r\n        return <p>로딩 중...</p>;\r\n      }\r\n    return (\r\n        console.log(content.filePath),\r\n      <div className=\"video-player-container\">\r\n        <video\r\n  ref={videoRef}\r\n  controls\r\n  autoPlay\r\n  onTimeUpdate={handleTimeUpdate}\r\n  onLoadedMetadata={handleLoadedMetadata}\r\n  width=\"640\"\r\n  height=\"360\"\r\n  className=\"main-video\"\r\n>\r\n  <source src={content?.filePath} type={`video/${videoUrl?.split('.').pop().toLowerCase()}`} />\r\n  브라우저가 비디오 태그를 지원하지 않습니다.\r\n</video>\r\n        \r\n        <div className=\"attendance-status\">\r\n          <div className=\"progress-info\">\r\n            현재 진도율: {lastSavedProgress.toFixed(2)}%\r\n          </div>\r\n          <label className=\"attendance-label\">\r\n            <input type=\"checkbox\" checked={isChecked} readOnly />\r\n            출석 완료 {isChecked ? '✓' : ''}\r\n          </label>\r\n          {!isChecked && (\r\n            <button \r\n              className=\"attendance-button\" \r\n              onClick={handleCourseAttendance}\r\n            >\r\n              수동 출석 체크\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n\r\nexport default VideoDetailPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}