{"ast":null,"code":"const handleCancelEnrollment = async courseId => {\n  console.log(\"🚫 신청 취소 요청 - memberId:\", memberId, \"courseId:\", courseId);\n  if (!token || !memberId) {\n    alert(\"로그인이 필요합니다.\");\n    navigate('/login');\n    return;\n  }\n  try {\n    await axios.delete(`http://localhost:8090/api/enrollments/member/${memberId}/course/${courseId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    alert(\"수강 신청이 취소되었습니다.\");\n    fetchEnrollments(); // ✅ 최신 상태 반영\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error(\"❌ 수강 신청 취소 실패:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    alert(\"수강 신청 취소 실패: \" + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message));\n  }\n};\n\n// 수정된 getEnrollmentStatus 함수\nconst getEnrollmentStatus = courseId => {\n  if (!enrolledCourses || enrolledCourses.length === 0) {\n    return null;\n  }\n  const enrollment = enrolledCourses.find(e => (e === null || e === void 0 ? void 0 : e.courseId) === courseId);\n  return enrollment ? enrollment.status : null;\n};","map":{"version":3,"names":["handleCancelEnrollment","courseId","console","log","memberId","token","alert","navigate","axios","delete","headers","Authorization","fetchEnrollments","error","_error$response","_error$response2","response","data","message","getEnrollmentStatus","enrolledCourses","length","enrollment","find","e","status"],"sources":["C:/Users/BIG60309/react-client/src/components/StudentEnroll.js"],"sourcesContent":["const handleCancelEnrollment = async (courseId) => {\r\n  console.log(\"🚫 신청 취소 요청 - memberId:\", memberId, \"courseId:\", courseId);\r\n\r\n  if (!token || !memberId) {\r\n    alert(\"로그인이 필요합니다.\");\r\n    navigate('/login');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await axios.delete(`http://localhost:8090/api/enrollments/member/${memberId}/course/${courseId}`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n\r\n    alert(\"수강 신청이 취소되었습니다.\");\r\n    fetchEnrollments(); // ✅ 최신 상태 반영\r\n  } catch (error) {\r\n    console.error(\"❌ 수강 신청 취소 실패:\", error.response?.data || error.message);\r\n    alert(\"수강 신청 취소 실패: \" + (error.response?.data || error.message));\r\n  }\r\n};\r\n\r\n\r\n// 수정된 getEnrollmentStatus 함수\r\nconst getEnrollmentStatus = (courseId) => {\r\nif (!enrolledCourses || enrolledCourses.length === 0) {\r\n  return null;\r\n}\r\nconst enrollment = enrolledCourses.find(e => e?.courseId === courseId);\r\n\r\nreturn enrollment ? enrollment.status : null;\r\n};"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,MAAOC,QAAQ,IAAK;EACjDC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEC,QAAQ,EAAE,WAAW,EAAEH,QAAQ,CAAC;EAEvE,IAAI,CAACI,KAAK,IAAI,CAACD,QAAQ,EAAE;IACvBE,KAAK,CAAC,aAAa,CAAC;IACpBC,QAAQ,CAAC,QAAQ,CAAC;IAClB;EACF;EAEA,IAAI;IACF,MAAMC,KAAK,CAACC,MAAM,CAAC,gDAAgDL,QAAQ,WAAWH,QAAQ,EAAE,EAAE;MAChGS,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAG;IAC9C,CAAC,CAAC;IAEFC,KAAK,CAAC,iBAAiB,CAAC;IACxBM,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA;IACdb,OAAO,CAACW,KAAK,CAAC,gBAAgB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,uBAAdA,eAAA,CAAgBG,IAAI,KAAIJ,KAAK,CAACK,OAAO,CAAC;IACtEZ,KAAK,CAAC,eAAe,IAAI,EAAAS,gBAAA,GAAAF,KAAK,CAACG,QAAQ,cAAAD,gBAAA,uBAAdA,gBAAA,CAAgBE,IAAI,KAAIJ,KAAK,CAACK,OAAO,CAAC,CAAC;EAClE;AACF,CAAC;;AAGD;AACA,MAAMC,mBAAmB,GAAIlB,QAAQ,IAAK;EAC1C,IAAI,CAACmB,eAAe,IAAIA,eAAe,CAACC,MAAM,KAAK,CAAC,EAAE;IACpD,OAAO,IAAI;EACb;EACA,MAAMC,UAAU,GAAGF,eAAe,CAACG,IAAI,CAACC,CAAC,IAAI,CAAAA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEvB,QAAQ,MAAKA,QAAQ,CAAC;EAEtE,OAAOqB,UAAU,GAAGA,UAAU,CAACG,MAAM,GAAG,IAAI;AAC5C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}