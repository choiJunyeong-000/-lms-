{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\AnnouncementsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnnouncementsList = () => {\n  _s();\n  const {\n    courseId\n  } = useParams();\n  const [announcements, setAnnouncements] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  // ✅ 토큰을 localStorage에서 가져옴\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n    if (storedToken) {\n      setToken(storedToken);\n    }\n  }, []);\n  useEffect(() => {\n    if (!token) return;\n    const fetchUserAndAnnouncements = async () => {\n      try {\n        // ✅ 현재 로그인한 사용자 정보 가져오기\n        const userResponse = await axios.get(\"http://localhost:8090/api/users/me\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUser(userResponse.data);\n        console.log(\"✅ 현재 로그인한 사용자:\", userResponse.data);\n        if (!courseId) return;\n\n        // ✅ 공지사항 불러오기\n        const response = await axios.get(`http://localhost:8090/courses/${courseId}/announcements`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"📢 공지사항 API 응답:\", response.data);\n        setAnnouncements(response.data);\n      } catch (error) {\n        console.error(\"공지사항 불러오기 실패:\", error);\n      }\n    };\n    fetchUserAndAnnouncements();\n  }, [courseId, token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCE2 \\uACF5\\uC9C0\\uC0AC\\uD56D \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC791\\uC131\\uC790\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC791\\uC131\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: announcements.length > 0 ? announcements.map((announcement, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: announcement.title || \"제목 없음\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: announcement.authorName || \"작성자 없음\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: announcement.createdAt ? new Date(announcement.createdAt).toLocaleDateString() : \"날짜 없음\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, announcement.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            children: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AnnouncementsList, \"qxI7Dj4qqIGgEnRWh3W10X/cGQw=\", false, function () {\n  return [useParams];\n});\n_c = AnnouncementsList;\nexport default AnnouncementsList;\nvar _c;\n$RefreshReg$(_c, \"AnnouncementsList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","AnnouncementsList","_s","courseId","announcements","setAnnouncements","token","setToken","user","setUser","storedToken","localStorage","getItem","fetchUserAndAnnouncements","userResponse","get","headers","Authorization","data","console","log","response","error","children","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","length","map","announcement","index","title","authorName","createdAt","Date","toLocaleDateString","id","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/AnnouncementsList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst AnnouncementsList = () => {\r\n  const { courseId } = useParams();\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [token, setToken] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n\r\n  // ✅ 토큰을 localStorage에서 가져옴\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem(\"token\");\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    const fetchUserAndAnnouncements = async () => {\r\n      try {\r\n        // ✅ 현재 로그인한 사용자 정보 가져오기\r\n        const userResponse = await axios.get(\"http://localhost:8090/api/users/me\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setUser(userResponse.data);\r\n        console.log(\"✅ 현재 로그인한 사용자:\", userResponse.data);\r\n\r\n        if (!courseId) return;\r\n\r\n        // ✅ 공지사항 불러오기\r\n        const response = await axios.get(`http://localhost:8090/courses/${courseId}/announcements`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        console.log(\"📢 공지사항 API 응답:\", response.data);\r\n        setAnnouncements(response.data);\r\n      } catch (error) {\r\n        console.error(\"공지사항 불러오기 실패:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserAndAnnouncements();\r\n  }, [courseId, token]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>📢 공지사항 목록</h2>\r\n     \r\n      <table border=\"1\" cellPadding=\"10\">\r\n        <thead>\r\n          <tr>\r\n            <th>번호</th>\r\n            <th>제목</th>\r\n            <th>작성자</th>\r\n            <th>작성일</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {announcements.length > 0 ? (\r\n            announcements.map((announcement, index) => (\r\n              <tr key={announcement.id}>\r\n                <td>{index + 1}</td>\r\n                <td>{announcement.title || \"제목 없음\"}</td>\r\n                <td>{announcement.authorName || \"작성자 없음\"}</td>\r\n                <td>{announcement.createdAt ? new Date(announcement.createdAt).toLocaleDateString() : \"날짜 없음\"}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"4\">공지사항이 없습니다.</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnnouncementsList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}