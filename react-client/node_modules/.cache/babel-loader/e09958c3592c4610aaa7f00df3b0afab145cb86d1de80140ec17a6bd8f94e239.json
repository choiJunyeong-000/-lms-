{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\StudentManagePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./StudentManagePage.css\"; // ✅ CSS 파일 불러오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentManagePage = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [openCourses, setOpenCourses] = useState({}); // ✅ 어떤 강좌가 열려 있는지 상태 관리\n  const professorStudentId = localStorage.getItem('studentId');\n  useEffect(() => {\n    axios.get(\"http://localhost:8090/api/student-manage/approved\", {\n      params: {\n        professorStudentId\n      }\n    }).then(response => setStudents(response.data)).catch(error => console.error(\"Error fetching students:\", error));\n  }, []);\n\n  // ✅ 강좌 클릭 시 열림/닫힘 토글\n  const toggleCourse = courseName => {\n    setOpenCourses(prevState => ({\n      ...prevState,\n      [courseName]: !prevState[courseName]\n    }));\n  };\n\n  // ✅ 강좌별 그룹화 (강좌명 기준으로 학생 분류)\n  const groupedStudents = students.reduce((acc, student) => {\n    if (!acc[student.courseName]) acc[student.courseName] = [];\n    acc[student.courseName].push(student);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-manage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC218\\uAC15\\uC0DD \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-list\",\n      children: Object.keys(groupedStudents).map((courseName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-header\",\n          onClick: () => toggleCourse(courseName),\n          children: [courseName, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `arrow ${openCourses[courseName] ? \"open\" : \"\"}`,\n            children: \"\\u25BE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), openCourses[courseName] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-list\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uD559\\uBC88\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uD559\\uC0DD \\uC774\\uB984\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uCD9C\\uC11D\\uB960\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: groupedStudents[courseName].map((student, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: student.studentId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: student.studentName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [student.attendanceRate, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 49\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentManagePage, \"S2KXNBAoy54huOMzoYmr47iP/hs=\");\n_c = StudentManagePage;\nexport default StudentManagePage;\nvar _c;\n$RefreshReg$(_c, \"StudentManagePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","StudentManagePage","_s","students","setStudents","openCourses","setOpenCourses","professorStudentId","localStorage","getItem","get","params","then","response","data","catch","error","console","toggleCourse","courseName","prevState","groupedStudents","reduce","acc","student","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","index","onClick","idx","studentId","studentName","attendanceRate","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/StudentManagePage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./StudentManagePage.css\"; // ✅ CSS 파일 불러오기\r\n\r\nconst StudentManagePage = () => {\r\n    const [students, setStudents] = useState([]);\r\n    const [openCourses, setOpenCourses] = useState({}); // ✅ 어떤 강좌가 열려 있는지 상태 관리\r\n    const professorStudentId = localStorage.getItem('studentId');\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8090/api/student-manage/approved\", {\r\n            params: { professorStudentId } \r\n        })\r\n        .then(response => setStudents(response.data))\r\n        .catch(error => console.error(\"Error fetching students:\", error));\r\n    }, []);\r\n    \r\n\r\n    // ✅ 강좌 클릭 시 열림/닫힘 토글\r\n    const toggleCourse = (courseName) => {\r\n        setOpenCourses(prevState => ({\r\n            ...prevState,\r\n            [courseName]: !prevState[courseName]\r\n        }));\r\n    };\r\n\r\n    // ✅ 강좌별 그룹화 (강좌명 기준으로 학생 분류)\r\n    const groupedStudents = students.reduce((acc, student) => {\r\n        if (!acc[student.courseName]) acc[student.courseName] = [];\r\n        acc[student.courseName].push(student);\r\n        return acc;\r\n    }, {});\r\n\r\n    return (\r\n        <div className=\"student-manage-container\">\r\n            <h2>수강생 관리</h2>\r\n            <div className=\"course-list\">\r\n                {Object.keys(groupedStudents).map((courseName, index) => (\r\n                    <div key={index} className=\"course-item\">\r\n                        {/* ✅ 강좌명 클릭 시 학생 리스트 열림/닫힘 */}\r\n                        <div \r\n                            className=\"course-header\" \r\n                            onClick={() => toggleCourse(courseName)}\r\n                        >\r\n                            {courseName}\r\n                            <span className={`arrow ${openCourses[courseName] ? \"open\" : \"\"}`}>&#9662;</span>\r\n                        </div>\r\n                        {openCourses[courseName] && (\r\n                            <div className=\"student-list\">\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>학번</th>\r\n                                            <th>학생 이름</th>\r\n                                            <th>출석률</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {groupedStudents[courseName].map((student, idx) => (\r\n                                            <tr key={idx}>\r\n                                                <td>{student.studentId}</td>\r\n                                                <td>{student.studentName}</td>\r\n                                                <td>{student.attendanceRate}%</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentManagePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}