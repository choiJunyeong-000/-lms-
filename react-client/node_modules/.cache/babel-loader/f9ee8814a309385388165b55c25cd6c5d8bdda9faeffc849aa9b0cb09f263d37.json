{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\Message\\\\MessagePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid'; // ✅ UUID 추가\nimport './MessagePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst MessagePage = () => {\n  _s();\n  const [member, setMember] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [recipient, setRecipient] = useState(null);\n  const [members, setMembers] = useState([]);\n\n  // ✅ 로그인한 사용자 정보 및 전체 멤버 조회\n  useEffect(() => {\n    async function fetchMemberData() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const resMe = await axios.get('http://localhost:8090/api/users/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMember(resMe.data);\n        const resMembers = await axios.get('http://localhost:8090/api/chat-members', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const otherMembers = resMembers.data.filter(m => m.studentId !== resMe.data.studentId);\n        setMembers(otherMembers);\n      } catch (error) {\n        console.error(\"🚨 멤버 정보를 불러오는 데 실패했습니다.\", error);\n      }\n    }\n    fetchMemberData();\n  }, []);\n\n  // ✅ 백엔드에서 채팅 내역 가져오기\n  useEffect(() => {\n    async function fetchMessages() {\n      if (!member || !recipient) return;\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          console.error(\"🚨 JWT 토큰 없음. 로그인 필요\");\n          return;\n        }\n        const response = await axios.get(`http://localhost:8090/api/chat/messages/${member.studentId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMessages(response.data);\n      } catch (error) {\n        console.error(\"🚨 채팅 내역을 불러오지 못했습니다.\", error);\n      }\n    }\n    fetchMessages();\n  }, [member, recipient]);\n\n  // ✅ 실시간 메시지 수신 (이전 리스너 정리)\n  useEffect(() => {\n    const handleMessageReceive = msg => {\n      setMessages(prev => {\n        if (prev.some(m => m.id === msg.id)) {\n          // ✅ 중복 메시지 필터링\n          console.warn(\"⚠️ 중복 메시지 감지 - 추가 안 함\", msg);\n          return prev;\n        }\n        return [...prev, msg];\n      });\n    };\n    socket.off('chat message'); // ✅ 기존 이벤트 제거\n    socket.on('chat message', handleMessageReceive); // ✅ 새로운 리스너 등록\n\n    return () => {\n      socket.off('chat message', handleMessageReceive); // ✅ 언마운트 시 정리\n    };\n  }, [member, recipient]);\n\n  // ✅ 메시지 전송 처리\n  const handleSend = async () => {\n    const trimmedText = inputText.trim();\n    if (!trimmedText || !recipient || !member) return;\n    const newMsg = {\n      sender: member.studentId,\n      recipient: recipient.studentId,\n      content: trimmedText\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8090/api/chat/send\", newMsg, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n\n      // ✅ UUID 활용하여 key 중복 문제 해결\n      setMessages(prev => [...prev, {\n        ...response.data,\n        id: response.data.id || uuidv4()\n      }]);\n      socket.emit('chat message', response.data);\n      setInputText('');\n    } catch (error) {\n      console.error(\"🚨 메시지 전송 실패\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: member && recipient ? `${member.name}과 ${recipient.name}의 대화` : \"수신자를 선택하세요\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipient-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uBC1B\\uB294 \\uC0AC\\uB78C: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setRecipient(members.find(m => m.studentId === e.target.value)),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"\\uD83D\\uDCE9 \\uBC1B\\uB294 \\uC0AC\\uB78C\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), members.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: m.studentId,\n            children: m.name\n          }, m.studentId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          // ✅ UUID 활용하여 중복 키 방지\n          className: `chat-message ${msg.sender === (member === null || member === void 0 ? void 0 : member.studentId) ? 'sent' : 'received'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [msg.sender, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, msg.id || uuidv4(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"\\uC804\\uC1A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagePage, \"sglox3GC4oWuCzCus97fKAeXcGI=\");\n_c = MessagePage;\nexport default MessagePage;\nvar _c;\n$RefreshReg$(_c, \"MessagePage\");","map":{"version":3,"names":["React","useState","useEffect","io","axios","v4","uuidv4","jsxDEV","_jsxDEV","socket","MessagePage","_s","member","setMember","messages","setMessages","inputText","setInputText","recipient","setRecipient","members","setMembers","fetchMemberData","token","localStorage","getItem","resMe","get","headers","Authorization","data","resMembers","otherMembers","filter","m","studentId","error","console","fetchMessages","response","handleMessageReceive","msg","prev","some","id","warn","off","on","handleSend","trimmedText","trim","newMsg","sender","content","post","emit","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","find","target","value","disabled","map","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/Message/MessagePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid'; // ✅ UUID 추가\r\nimport './MessagePage.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst MessagePage = () => {\r\n  const [member, setMember] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [recipient, setRecipient] = useState(null);\r\n  const [members, setMembers] = useState([]);\r\n\r\n  // ✅ 로그인한 사용자 정보 및 전체 멤버 조회\r\n  useEffect(() => {\r\n    async function fetchMemberData() {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const resMe = await axios.get('http://localhost:8090/api/users/me', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        setMember(resMe.data);\r\n\r\n        const resMembers = await axios.get('http://localhost:8090/api/chat-members', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n        const otherMembers = resMembers.data.filter(m => m.studentId !== resMe.data.studentId);\r\n        setMembers(otherMembers);\r\n      } catch (error) {\r\n        console.error(\"🚨 멤버 정보를 불러오는 데 실패했습니다.\", error);\r\n      }\r\n    }\r\n    fetchMemberData();\r\n  }, []);\r\n\r\n  // ✅ 백엔드에서 채팅 내역 가져오기\r\n  useEffect(() => {\r\n    async function fetchMessages() {\r\n      if (!member || !recipient) return;\r\n\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          console.error(\"🚨 JWT 토큰 없음. 로그인 필요\");\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get(`http://localhost:8090/api/chat/messages/${member.studentId}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n    \r\n\r\n        setMessages(response.data);\r\n      } catch (error) {\r\n        console.error(\"🚨 채팅 내역을 불러오지 못했습니다.\", error);\r\n      }\r\n    }\r\n\r\n    fetchMessages();\r\n  }, [member, recipient]);\r\n\r\n  // ✅ 실시간 메시지 수신 (이전 리스너 정리)\r\n  useEffect(() => {\r\n    const handleMessageReceive = (msg) => {\r\n     \r\n\r\n  \r\n      setMessages(prev => {\r\n        if (prev.some(m => m.id === msg.id)) { // ✅ 중복 메시지 필터링\r\n          console.warn(\"⚠️ 중복 메시지 감지 - 추가 안 함\", msg);\r\n          return prev;\r\n        }\r\n        return [...prev, msg];\r\n      });\r\n    };\r\n  \r\n    socket.off('chat message');  // ✅ 기존 이벤트 제거\r\n    socket.on('chat message', handleMessageReceive);  // ✅ 새로운 리스너 등록\r\n  \r\n    return () => {\r\n      socket.off('chat message', handleMessageReceive);  // ✅ 언마운트 시 정리\r\n    };\r\n  }, [member, recipient]);\r\n  \r\n\r\n  // ✅ 메시지 전송 처리\r\n  const handleSend = async () => {\r\n    const trimmedText = inputText.trim();\r\n    if (!trimmedText || !recipient || !member) return;\r\n\r\n    const newMsg = {\r\n      sender: member.studentId,\r\n      recipient: recipient.studentId,\r\n      content: trimmedText\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8090/api/chat/send\", newMsg, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n      });\r\n\r\n      // ✅ UUID 활용하여 key 중복 문제 해결\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { ...response.data, id: response.data.id || uuidv4() }\r\n      ]);\r\n\r\n      socket.emit('chat message', response.data);\r\n      setInputText('');\r\n    } catch (error) {\r\n      console.error(\"🚨 메시지 전송 실패\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-page-container\">\r\n      <div className=\"chat-area\">\r\n        <div className=\"chat-header\">\r\n          {member && recipient \r\n            ? `${member.name}과 ${recipient.name}의 대화`\r\n            : \"수신자를 선택하세요\"}\r\n        </div>\r\n\r\n        <div className=\"recipient-selector\">\r\n          <label>받는 사람: </label>\r\n          <select onChange={(e) => setRecipient(members.find(m => m.studentId === e.target.value))}>\r\n            <option value=\"\" disabled>📩 받는 사람을 선택하세요</option>\r\n            {members.map(m => (\r\n              <option key={m.studentId} value={m.studentId}>\r\n                {m.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"chat-messages\">\r\n          {messages.map((msg) => (\r\n            <div key={msg.id || uuidv4()} // ✅ UUID 활용하여 중복 키 방지\r\n                 className={`chat-message ${msg.sender === member?.studentId ? 'sent' : 'received'}`}>\r\n              <span>{msg.sender}: </span>\r\n              <span>{msg.content}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"chat-input\">\r\n          <input \r\n            type=\"text\" \r\n            value={inputText} \r\n            onChange={(e) => setInputText(e.target.value)} \r\n            placeholder=\"메시지를 입력하세요...\" \r\n          />\r\n          <button onClick={handleSend}>전송</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}