{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\StudentAttendance.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentAttendance = ({\n  studentId,\n  token\n}) => {\n  _s();\n  const [attendanceData, setAttendanceData] = useState({\n    attendance: {},\n    progress: {}\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAttendance = async () => {\n      if (!studentId) {\n        console.error(\"studentId가 없습니다.\");\n        return;\n      }\n      setLoading(true); // 데이터 로딩 시작 시 로딩 상태를 true로 설정\n      try {\n        const response = await axios.get(`http://localhost:8090/api/attendance/student`, {\n          params: {\n            studentId\n          },\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setAttendanceData(response.data);\n      } catch (error) {\n        setError(\"출석 데이터를 불러오는 중 오류 발생\");\n        console.error(\"출석 데이터를 불러오는 중 오류 발생:\", error);\n      } finally {\n        setLoading(false); // 데이터 로딩이 끝나면 로딩 상태를 false로 설정\n      }\n    };\n    if (token && studentId) {\n      fetchAttendance();\n    } else {\n      setError(\"로그인이 필요하거나 studentId가 없습니다.\");\n      console.error(\"로그인이 필요하거나 studentId가 없습니다.\");\n    }\n  }, [studentId, token]);\n\n  // 로딩 중 또는 오류 발생 시 메시지 출력\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }, this);\n\n  // 출석 데이터를 정상적으로 받아왔을 때 출력\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD559\\uC0DD \\uCD9C\\uC11D \\uC0C1\\uD0DC \\uBC0F \\uC9C4\\uB3C4\\uC728\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uCD9C\\uC11D \\uC0C1\\uD0DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(attendanceData.attendance).map(([courseId, isPresent]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"\\uAC15\\uC758 ID: \", courseId, \", \\uCD9C\\uC11D: \", isPresent ? \"출석\" : \"불참\"]\n      }, courseId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC9C4\\uB3C4\\uC728\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(attendanceData.progress).map(([courseId, progress]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"\\uAC15\\uC758 ID: \", courseId, \", \\uC9C4\\uB3C4\\uC728: \", progress, \"%\"]\n      }, courseId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentAttendance, \"IA05PPgJ738aTfKSQnIKeRelKF8=\");\n_c = StudentAttendance;\nexport default StudentAttendance;\nvar _c;\n$RefreshReg$(_c, \"StudentAttendance\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","StudentAttendance","studentId","token","_s","attendanceData","setAttendanceData","attendance","progress","loading","setLoading","error","setError","fetchAttendance","console","response","get","params","headers","Authorization","data","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","courseId","isPresent","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/StudentAttendance.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst StudentAttendance = ({ studentId, token }) => {\r\n  const [attendanceData, setAttendanceData] = useState({ attendance: {}, progress: {} });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAttendance = async () => {\r\n      if (!studentId) {\r\n        console.error(\"studentId가 없습니다.\");\r\n        return;\r\n      }\r\n\r\n      setLoading(true);  // 데이터 로딩 시작 시 로딩 상태를 true로 설정\r\n      try {\r\n        const response = await axios.get(`http://localhost:8090/api/attendance/student`, {\r\n          params: { studentId },\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setAttendanceData(response.data);\r\n      } catch (error) {\r\n        setError(\"출석 데이터를 불러오는 중 오류 발생\");\r\n        console.error(\"출석 데이터를 불러오는 중 오류 발생:\", error);\r\n      } finally {\r\n        setLoading(false);  // 데이터 로딩이 끝나면 로딩 상태를 false로 설정\r\n      }\r\n    };\r\n\r\n    if (token && studentId) {\r\n      fetchAttendance();\r\n    } else {\r\n      setError(\"로그인이 필요하거나 studentId가 없습니다.\");\r\n      console.error(\"로그인이 필요하거나 studentId가 없습니다.\");\r\n    }\r\n  }, [studentId, token]);\r\n\r\n  // 로딩 중 또는 오류 발생 시 메시지 출력\r\n  if (loading) return <div>로딩 중...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  // 출석 데이터를 정상적으로 받아왔을 때 출력\r\n  return (\r\n    <div>\r\n      <h1>학생 출석 상태 및 진도율</h1>\r\n\r\n      <h2>출석 상태</h2>\r\n      <ul>\r\n        {Object.entries(attendanceData.attendance).map(([courseId, isPresent]) => (\r\n          <li key={courseId}>\r\n            강의 ID: {courseId}, 출석: {isPresent ? \"출석\" : \"불참\"}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h2>진도율</h2>\r\n      <ul>\r\n        {Object.entries(attendanceData.progress).map(([courseId, progress]) => (\r\n          <li key={courseId}>\r\n            강의 ID: {courseId}, 진도율: {progress}%\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentAttendance;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC;IAAEU,UAAU,EAAE,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC;EAAE,CAAC,CAAC;EACtF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMiB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI,CAACX,SAAS,EAAE;QACdY,OAAO,CAACH,KAAK,CAAC,kBAAkB,CAAC;QACjC;MACF;MAEAD,UAAU,CAAC,IAAI,CAAC,CAAC,CAAE;MACnB,IAAI;QACF,MAAMK,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,8CAA8C,EAAE;UAC/EC,MAAM,EAAE;YAAEf;UAAU,CAAC;UACrBgB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUhB,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFG,iBAAiB,CAACS,QAAQ,CAACK,IAAI,CAAC;MAClC,CAAC,CAAC,OAAOT,KAAK,EAAE;QACdC,QAAQ,CAAC,sBAAsB,CAAC;QAChCE,OAAO,CAACH,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,SAAS;QACRD,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;MACtB;IACF,CAAC;IAED,IAAIP,KAAK,IAAID,SAAS,EAAE;MACtBW,eAAe,CAAC,CAAC;IACnB,CAAC,MAAM;MACLD,QAAQ,CAAC,6BAA6B,CAAC;MACvCE,OAAO,CAACH,KAAK,CAAC,6BAA6B,CAAC;IAC9C;EACF,CAAC,EAAE,CAACT,SAAS,EAAEC,KAAK,CAAC,CAAC;;EAEtB;EACA,IAAIM,OAAO,EAAE,oBAAOT,OAAA;IAAAqB,QAAA,EAAK;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACtC,IAAId,KAAK,EAAE,oBAAOX,OAAA;IAAAqB,QAAA,EAAMV;EAAK;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;;EAEpC;EACA,oBACEzB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEvBzB,OAAA;MAAAqB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdzB,OAAA;MAAAqB,QAAA,EACGK,MAAM,CAACC,OAAO,CAACtB,cAAc,CAACE,UAAU,CAAC,CAACqB,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAEC,SAAS,CAAC,kBACnE9B,OAAA;QAAAqB,QAAA,GAAmB,mBACV,EAACQ,QAAQ,EAAC,kBAAM,EAACC,SAAS,GAAG,IAAI,GAAG,IAAI;MAAA,GADxCD,QAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAELzB,OAAA;MAAAqB,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZzB,OAAA;MAAAqB,QAAA,EACGK,MAAM,CAACC,OAAO,CAACtB,cAAc,CAACG,QAAQ,CAAC,CAACoB,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAErB,QAAQ,CAAC,kBAChER,OAAA;QAAAqB,QAAA,GAAmB,mBACV,EAACQ,QAAQ,EAAC,wBAAO,EAACrB,QAAQ,EAAC,GACpC;MAAA,GAFSqB,QAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CA/DIH,iBAAiB;AAAA8B,EAAA,GAAjB9B,iBAAiB;AAiEvB,eAAeA,iBAAiB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}