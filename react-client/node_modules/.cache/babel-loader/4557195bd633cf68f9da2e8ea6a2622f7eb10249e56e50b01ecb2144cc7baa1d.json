{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\ContentView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentViewer = ({\n  token\n}) => {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const fileUrl = queryParams.get(\"file\");\n  const [fileBlobUrl, setFileBlobUrl] = useState(null);\n  useEffect(() => {\n    const fetchFile = async () => {\n      try {\n        const response = await axios.get(fileUrl, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          responseType: \"blob\" // 바이너리 데이터로 받기\n        });\n        const blob = new Blob([response.data], {\n          type: response.headers[\"content-type\"]\n        });\n        const blobUrl = URL.createObjectURL(blob);\n        setFileBlobUrl(blobUrl);\n      } catch (error) {\n        console.error(\"파일 로딩 실패:\", error);\n      }\n    };\n    if (token && fileUrl) {\n      fetchFile();\n    }\n  }, [token, fileUrl]);\n  if (!fileBlobUrl) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uD30C\\uC77C\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAC15\\uC758 \\uC790\\uB8CC \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: fileBlobUrl,\n      width: \"100%\",\n      height: \"800px\",\n      style: {\n        border: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentViewer, \"/JuwdW/dfjDUO+ZsO8Hfk/EZ3o0=\", false, function () {\n  return [useLocation];\n});\n_c = ContentViewer;\nexport default ContentViewer;\nvar _c;\n$RefreshReg$(_c, \"ContentViewer\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","jsxDEV","_jsxDEV","ContentViewer","token","_s","location","queryParams","URLSearchParams","search","fileUrl","get","fileBlobUrl","setFileBlobUrl","fetchFile","response","headers","Authorization","responseType","blob","Blob","data","type","blobUrl","URL","createObjectURL","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","width","height","style","border","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/ContentView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ContentViewer = ({ token }) => {\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const fileUrl = queryParams.get(\"file\");\r\n\r\n  const [fileBlobUrl, setFileBlobUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchFile = async () => {\r\n      try {\r\n        const response = await axios.get(fileUrl, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n          responseType: \"blob\", // 바이너리 데이터로 받기\r\n        });\r\n\r\n        const blob = new Blob([response.data], { type: response.headers[\"content-type\"] });\r\n        const blobUrl = URL.createObjectURL(blob);\r\n        setFileBlobUrl(blobUrl);\r\n      } catch (error) {\r\n        console.error(\"파일 로딩 실패:\", error);\r\n      }\r\n    };\r\n\r\n    if (token && fileUrl) {\r\n      fetchFile();\r\n    }\r\n  }, [token, fileUrl]);\r\n\r\n  if (!fileBlobUrl) return <p>파일을 불러오는 중...</p>;\r\n\r\n  return (\r\n    <div className=\"content-viewer\">\r\n      <h2>강의 자료 보기</h2>\r\n      <iframe src={fileBlobUrl} width=\"100%\" height=\"800px\" style={{ border: \"none\" }}></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentViewer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAMC,OAAO,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC;EAEvC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACY,GAAG,CAACD,OAAO,EAAE;UACxCM,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUb,KAAK;UAAG,CAAC;UAC7Cc,YAAY,EAAE,MAAM,CAAE;QACxB,CAAC,CAAC;QAEF,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,QAAQ,CAACM,IAAI,CAAC,EAAE;UAAEC,IAAI,EAAEP,QAAQ,CAACC,OAAO,CAAC,cAAc;QAAE,CAAC,CAAC;QAClF,MAAMO,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;QACzCN,cAAc,CAACU,OAAO,CAAC;MACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACnC;IACF,CAAC;IAED,IAAItB,KAAK,IAAIM,OAAO,EAAE;MACpBI,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACV,KAAK,EAAEM,OAAO,CAAC,CAAC;EAEpB,IAAI,CAACE,WAAW,EAAE,oBAAOV,OAAA;IAAA0B,QAAA,EAAG;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE7C,oBACE9B,OAAA;IAAK+B,SAAS,EAAC,gBAAgB;IAAAL,QAAA,gBAC7B1B,OAAA;MAAA0B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB9B,OAAA;MAAQgC,GAAG,EAAEtB,WAAY;MAACuB,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,OAAO;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvF,CAAC;AAEV,CAAC;AAAC3B,EAAA,CApCIF,aAAa;EAAA,QACAH,WAAW;AAAA;AAAAuC,EAAA,GADxBpC,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}