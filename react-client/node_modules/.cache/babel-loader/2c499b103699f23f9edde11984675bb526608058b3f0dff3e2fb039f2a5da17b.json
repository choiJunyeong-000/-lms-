{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\AnnouncementEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./AnnouncementEdit.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnnouncementEdit = () => {\n  _s();\n  const {\n    courseId,\n    announcementId\n  } = useParams();\n  const navigate = useNavigate();\n\n  /** ✅ 상태 변수 */\n  const [token, setToken] = useState(\"\");\n  const [memberId, setMemberId] = useState(null);\n  const [role, setRole] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  /** ✅ 로컬 스토리지에서 토큰 가져오기 */\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n    if (storedToken) {\n      setToken(storedToken);\n    }\n  }, []);\n\n  /** ✅ 사용자 정보 가져오기 */\n  useEffect(() => {\n    if (!token) return;\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8090/api/users/me\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"🟢 사용자 정보:\", response.data);\n        setMemberId(response.data.id);\n        setRole(response.data.role);\n      } catch (error) {\n        var _error$response;\n        console.error(\"❌ 사용자 정보 조회 실패:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      }\n    };\n    fetchUserData();\n  }, [token]);\n\n  /** ✅ 공지사항 데이터 불러오기 */\n  useEffect(() => {\n    if (!token) return; // ❌ memberId 체크 제거\n\n    const fetchAnnouncement = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8090/api/courses/${courseId}/announcements/${announcementId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"🟢 불러온 공지사항:\", response.data);\n        setTitle(response.data.title);\n        setContent(response.data.content);\n      } catch (error) {\n        var _error$response2;\n        console.error(\"❌ 공지사항 불러오기 실패:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error);\n      }\n    };\n    fetchAnnouncement();\n  }, [courseId, announcementId, token]);\n\n  /** ✅ 공지사항 수정 요청 */\n  const handleUpdate = async () => {\n    console.log(\"🟢 업데이트 요청 - memberId:\", memberId);\n    console.log(\"🟢 업데이트 요청 - role:\", role);\n    if (!token || !memberId) {\n      alert(\"❌ 사용자 인증이 필요합니다. 다시 로그인해주세요.\");\n      return;\n    }\n    if (role !== \"PROFESSOR\" && role !== \"ADMIN\") {\n      alert(\"❌ 권한이 없습니다.\");\n      return;\n    }\n    try {\n      const requestBody = {\n        memberId: memberId,\n        // ✅ 확실히 포함\n        title,\n        content\n      };\n      await axios.put(`http://localhost:8090/api/courses/${courseId}/announcements/${announcementId}/edit`, requestBody, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      alert(\"✅ 공지사항이 수정되었습니다.\");\n      navigate(`/courses/${courseId}/announcements`);\n    } catch (error) {\n      var _error$response3;\n      console.error(\"❌ 공지사항 수정 실패:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error);\n      alert(\"❌ 공지사항 수정에 실패했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCE2 \\uACF5\\uC9C0\\uC0AC\\uD56D \\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"\\uC81C\\uBAA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      placeholder: \"\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdate,\n      disabled: !memberId || !token || role !== \"PROFESSOR\" && role !== \"ADMIN\",\n      children: \"\\uC218\\uC815 \\uC644\\uB8CC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"\\uCDE8\\uC18C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(AnnouncementEdit, \"D0fmzvRc0gAcjN30VvhyNchm4Tg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AnnouncementEdit;\nexport default AnnouncementEdit;\nvar _c;\n$RefreshReg$(_c, \"AnnouncementEdit\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","jsxDEV","_jsxDEV","AnnouncementEdit","_s","courseId","announcementId","navigate","token","setToken","memberId","setMemberId","role","setRole","title","setTitle","content","setContent","storedToken","localStorage","getItem","fetchUserData","response","get","headers","Authorization","console","log","data","id","error","_error$response","fetchAnnouncement","_error$response2","handleUpdate","alert","requestBody","put","_error$response3","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/AnnouncementEdit.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./AnnouncementEdit.css\";\r\nconst AnnouncementEdit = () => {\r\n  const { courseId, announcementId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  /** ✅ 상태 변수 */\r\n  const [token, setToken] = useState(\"\");\r\n  const [memberId, setMemberId] = useState(null);\r\n  const [role, setRole] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  /** ✅ 로컬 스토리지에서 토큰 가져오기 */\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem(\"token\");\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n    }\r\n  }, []);\r\n\r\n  /** ✅ 사용자 정보 가져오기 */\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8090/api/users/me\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        console.log(\"🟢 사용자 정보:\", response.data);\r\n        setMemberId(response.data.id);\r\n        setRole(response.data.role);\r\n      } catch (error) {\r\n        console.error(\"❌ 사용자 정보 조회 실패:\", error.response?.data || error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [token]);\r\n\r\n  /** ✅ 공지사항 데이터 불러오기 */\r\n  useEffect(() => {\r\n    if (!token) return; // ❌ memberId 체크 제거\r\n\r\n    const fetchAnnouncement = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:8090/api/courses/${courseId}/announcements/${announcementId}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        console.log(\"🟢 불러온 공지사항:\", response.data);\r\n        setTitle(response.data.title);\r\n        setContent(response.data.content);\r\n      } catch (error) {\r\n        console.error(\"❌ 공지사항 불러오기 실패:\", error.response?.data || error);\r\n      }\r\n    };\r\n\r\n    fetchAnnouncement();\r\n  }, [courseId, announcementId, token]);\r\n\r\n  /** ✅ 공지사항 수정 요청 */\r\n  const handleUpdate = async () => {\r\n    console.log(\"🟢 업데이트 요청 - memberId:\", memberId);\r\n    console.log(\"🟢 업데이트 요청 - role:\", role);\r\n\r\n    if (!token || !memberId) {\r\n      alert(\"❌ 사용자 인증이 필요합니다. 다시 로그인해주세요.\");\r\n      return;\r\n    }\r\n\r\n    if (role !== \"PROFESSOR\" && role !== \"ADMIN\") {\r\n      alert(\"❌ 권한이 없습니다.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const requestBody = {\r\n        memberId: memberId, // ✅ 확실히 포함\r\n        title,\r\n        content,\r\n      };\r\n\r\n      await axios.put(\r\n        `http://localhost:8090/api/courses/${courseId}/announcements/${announcementId}/edit`,\r\n        requestBody,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      alert(\"✅ 공지사항이 수정되었습니다.\");\r\n      navigate(`/courses/${courseId}/announcements`);\r\n    } catch (error) {\r\n      console.error(\"❌ 공지사항 수정 실패:\", error.response?.data || error);\r\n      alert(\"❌ 공지사항 수정에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit-container\">\r\n      <h2>📢 공지사항 수정</h2>\r\n      <input value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"제목\" />\r\n      <textarea value={content} onChange={(e) => setContent(e.target.value)} placeholder=\"내용\"></textarea>\r\n      <button onClick={handleUpdate} disabled={!memberId || !token || (role !== \"PROFESSOR\" && role !== \"ADMIN\")}>\r\n        수정 완료\r\n      </button>\r\n      <button onClick={() => navigate(-1)}>취소</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnnouncementEdit;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}