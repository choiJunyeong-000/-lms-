{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\AssignmentDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignmentDetail = () => {\n  _s();\n  const {\n    courseId,\n    weekNumber\n  } = useParams(); // URL 파라미터로 courseId와 weekNumber 가져오기\n  const [assignments, setAssignments] = useState([]);\n  const [error, setError] = useState(null);\n  const [isProfessor, setIsProfessor] = useState(false); // 교수 여부 확인\n  const [token, setToken] = useState(localStorage.getItem('token')); // 토큰 상태 관리\n  const [loading, setLoading] = useState(true);\n  const [courseName, setCourseName] = useState(\"\"); // 강좌 이름 상태 관리\n\n  useEffect(() => {\n    const fetchAssignments = async () => {\n      if (!token) {\n        setError('로그인 정보가 없습니다.');\n        setLoading(false);\n        return;\n      }\n      try {\n        // 특정 주차의 과제 정보를 가져옵니다.\n        const response = await axios.get(`http://localhost:8090/api/courses/${courseId}/weeks/${weekNumber}/assignments`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setAssignments(response.data);\n\n        // 강좌 이름을 가져옵니다.\n        const courseResponse = await axios.get(`http://localhost:8090/api/courses/${courseId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setCourseName(courseResponse.data.name); // 강좌 이름 설정\n\n        // 교수 여부 확인: 토큰을 통해 로그인한 사용자 정보 확인\n        const fetchUser = async () => {\n          try {\n            const userResponse = await axios.get('http://localhost:8090/api/users/me', {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            if (userResponse.data.role === 'PROFESSOR') {\n              setIsProfessor(true);\n            }\n          } catch (error) {\n            console.error('사용자 정보 불러오기 실패:', error);\n            setError('사용자 정보 불러오기 실패');\n          }\n        };\n        fetchUser();\n      } catch (error) {\n        console.error('과제 정보를 불러오는 데 실패했습니다.', error);\n        setError('과제 정보를 불러오는 데 실패했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAssignments();\n  }, [courseId, weekNumber, token]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [courseName, \" \\uAC15\\uC88C\\uC758 \", weekNumber, \"\\uC8FC\\uCC28 \\uACFC\\uC81C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), assignments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: assignments.map(assignment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC81C\\uBAA9: \", assignment.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC124\\uBA85: \", assignment.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uB9C8\\uAC10\\uC77C: \", assignment.dueDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this), isProfessor && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/courses/${courseId}/weeks/${weekNumber}/assignments/${assignment.id}/grade`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"\\uACFC\\uC81C \\uD3C9\\uAC00\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this)]\n      }, assignment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD574\\uB2F9 \\uC8FC\\uCC28\\uC5D0 \\uACFC\\uC81C\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(AssignmentDetail, \"O1c47dW1c8xFuWtGgcfA5qm/LLk=\", false, function () {\n  return [useParams];\n});\n_c = AssignmentDetail;\nexport default AssignmentDetail;\nvar _c;\n$RefreshReg$(_c, \"AssignmentDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","axios","jsxDEV","_jsxDEV","AssignmentDetail","_s","courseId","weekNumber","assignments","setAssignments","error","setError","isProfessor","setIsProfessor","token","setToken","localStorage","getItem","loading","setLoading","courseName","setCourseName","fetchAssignments","response","get","headers","Authorization","data","courseResponse","name","fetchUser","userResponse","role","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","assignment","title","description","dueDate","to","id","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/AssignmentDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst AssignmentDetail = () => {\r\n    const { courseId, weekNumber } = useParams(); // URL 파라미터로 courseId와 weekNumber 가져오기\r\n    const [assignments, setAssignments] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [isProfessor, setIsProfessor] = useState(false); // 교수 여부 확인\r\n    const [token, setToken] = useState(localStorage.getItem('token')); // 토큰 상태 관리\r\n    const [loading, setLoading] = useState(true);\r\n    const [courseName, setCourseName] = useState(\"\"); // 강좌 이름 상태 관리\r\n\r\n    useEffect(() => {\r\n        const fetchAssignments = async () => {\r\n            if (!token) {\r\n                setError('로그인 정보가 없습니다.');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                // 특정 주차의 과제 정보를 가져옵니다.\r\n                const response = await axios.get(`http://localhost:8090/api/courses/${courseId}/weeks/${weekNumber}/assignments`, {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                });\r\n                setAssignments(response.data);\r\n\r\n                // 강좌 이름을 가져옵니다.\r\n                const courseResponse = await axios.get(`http://localhost:8090/api/courses/${courseId}`, {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                });\r\n                setCourseName(courseResponse.data.name); // 강좌 이름 설정\r\n\r\n                // 교수 여부 확인: 토큰을 통해 로그인한 사용자 정보 확인\r\n                const fetchUser = async () => {\r\n                    try {\r\n                        const userResponse = await axios.get('http://localhost:8090/api/users/me', {\r\n                            headers: { Authorization: `Bearer ${token}` }\r\n                        });\r\n                        if (userResponse.data.role === 'PROFESSOR') {\r\n                            setIsProfessor(true);\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('사용자 정보 불러오기 실패:', error);\r\n                        setError('사용자 정보 불러오기 실패');\r\n                    }\r\n                };\r\n\r\n                fetchUser();\r\n            } catch (error) {\r\n                console.error('과제 정보를 불러오는 데 실패했습니다.', error);\r\n                setError('과제 정보를 불러오는 데 실패했습니다.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchAssignments();\r\n    }, [courseId, weekNumber, token]);\r\n\r\n    if (loading) return <div>로딩 중...</div>;\r\n    if (error) return <div style={{ color: 'red' }}>{error}</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>{courseName} 강좌의 {weekNumber}주차 과제</h2>\r\n\r\n            {assignments.length > 0 ? (\r\n                <ul>\r\n                    {assignments.map((assignment) => (\r\n                        <li key={assignment.id}>\r\n                            <p>제목: {assignment.title}</p>\r\n                            <p>설명: {assignment.description}</p>\r\n                            <p>마감일: {assignment.dueDate}</p>\r\n\r\n                            {isProfessor && (\r\n                                <div>\r\n                                    <Link to={`/courses/${courseId}/weeks/${weekNumber}/assignments/${assignment.id}/grade`}>\r\n                                        <button>과제 평가하기</button>\r\n                                    </Link>\r\n                                </div>\r\n                            )}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>해당 주차에 과제가 없습니다.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignmentDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}