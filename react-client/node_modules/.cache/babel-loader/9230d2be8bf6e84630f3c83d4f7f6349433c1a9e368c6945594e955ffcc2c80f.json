{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\Team\\\\CreateTeamProject.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./CreateTeamProject.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTeamProject() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const {\n    courseId,\n    courseName\n  } = state || {};\n  const [teams, setTeams] = useState([]);\n  const [selectedTeamId, setSelectedTeamId] = useState(\"\");\n  const [projectName, setProjectName] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"\"); // 자동 설정할 마감일\n  const [message, setMessage] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    const fetchTeams = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8090/api/team?courseId=${courseId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const teamsData = Array.isArray(response.data) ? response.data : [];\n        setTeams(teamsData);\n      } catch (error) {\n        console.error(\"팀 목록 불러오기 실패:\", error);\n      }\n    };\n    if (courseId) {\n      fetchTeams();\n    }\n  }, [courseId, token]);\n\n  // 팀 선택 시 해당 팀의 마감일 자동 입력\n  const handleTeamChange = e => {\n    const selectedId = e.target.value;\n    setSelectedTeamId(selectedId);\n\n    // 선택한 팀의 deadline을 찾아 자동 입력\n    const selectedTeam = teams.find(team => team.id.toString() === selectedId);\n    if (selectedTeam) {\n      setDeadline(selectedTeam.deadline || \"\"); // 마감일이 없으면 빈 값\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedTeamId || !projectName || !deadline) {\n      setMessage(\"모든 필드를 입력하세요.\");\n      return;\n    }\n    try {\n      const payload = {\n        teamId: selectedTeamId,\n        projectName,\n        deadline,\n        // 선택한 팀의 마감일을 그대로 사용\n        courseId\n      };\n      const response = await axios.post(\"http://localhost:8090/api/team-projects\", payload, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"✅ 팀 프로젝트가 성공적으로 생성되었습니다!\");\n      setSelectedTeamId(\"\");\n      setProjectName(\"\");\n      setDeadline(\"\");\n    } catch (error) {\n      console.error(\"❌ 팀 프로젝트 생성 실패:\", error);\n      setMessage(\"🚨 팀 프로젝트 생성 실패\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD300 \\uD504\\uB85C\\uC81D\\uD2B8 \\uC0DD\\uC131 - \\uAC15\\uC758: \", courseName || \"강의 정보 없음\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uD300 \\uC120\\uD0DD: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedTeamId,\n          onChange: handleTeamChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\uD300\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), teams.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: team.id,\n            children: team.name\n          }, team.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC774\\uB984: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: projectName,\n          onChange: e => setProjectName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uB9C8\\uAC10\\uC77C: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: deadline,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC0DD\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateTeamProject, \"Ip5HvwUEAcyietnN2o3c9Ob0Uwk=\", false, function () {\n  return [useLocation];\n});\n_c = CreateTeamProject;\nexport default CreateTeamProject;\nvar _c;\n$RefreshReg$(_c, \"CreateTeamProject\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","jsxDEV","_jsxDEV","CreateTeamProject","_s","state","courseId","courseName","teams","setTeams","selectedTeamId","setSelectedTeamId","projectName","setProjectName","deadline","setDeadline","message","setMessage","token","localStorage","getItem","fetchTeams","response","get","headers","Authorization","teamsData","Array","isArray","data","error","console","handleTeamChange","e","selectedId","target","value","selectedTeam","find","team","id","toString","handleSubmit","preventDefault","payload","teamId","post","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","map","name","type","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/Team/CreateTeamProject.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./CreateTeamProject.css\";\r\n\r\nfunction CreateTeamProject() {\r\n  const { state } = useLocation();\r\n  const { courseId, courseName } = state || {};\r\n\r\n  const [teams, setTeams] = useState([]);\r\n  const [selectedTeamId, setSelectedTeamId] = useState(\"\");\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [deadline, setDeadline] = useState(\"\"); // 자동 설정할 마감일\r\n  const [message, setMessage] = useState(\"\");\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    const fetchTeams = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8090/api/team?courseId=${courseId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        const teamsData = Array.isArray(response.data) ? response.data : [];\r\n        setTeams(teamsData);\r\n      } catch (error) {\r\n        console.error(\"팀 목록 불러오기 실패:\", error);\r\n      }\r\n    };\r\n\r\n    if (courseId) {\r\n      fetchTeams();\r\n    }\r\n  }, [courseId, token]);\r\n\r\n  // 팀 선택 시 해당 팀의 마감일 자동 입력\r\n  const handleTeamChange = (e) => {\r\n    const selectedId = e.target.value;\r\n    setSelectedTeamId(selectedId);\r\n\r\n    // 선택한 팀의 deadline을 찾아 자동 입력\r\n    const selectedTeam = teams.find((team) => team.id.toString() === selectedId);\r\n    if (selectedTeam) {\r\n      setDeadline(selectedTeam.deadline || \"\"); // 마감일이 없으면 빈 값\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!selectedTeamId || !projectName || !deadline) {\r\n      setMessage(\"모든 필드를 입력하세요.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = {\r\n        teamId: selectedTeamId,\r\n        projectName,\r\n        deadline, // 선택한 팀의 마감일을 그대로 사용\r\n        courseId,\r\n      };\r\n\r\n      const response = await axios.post(\"http://localhost:8090/api/team-projects\", payload, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      setMessage(\"✅ 팀 프로젝트가 성공적으로 생성되었습니다!\");\r\n      setSelectedTeamId(\"\");\r\n      setProjectName(\"\");\r\n      setDeadline(\"\");\r\n    } catch (error) {\r\n      console.error(\"❌ 팀 프로젝트 생성 실패:\", error);\r\n      setMessage(\"🚨 팀 프로젝트 생성 실패\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>팀 프로젝트 생성 - 강의: {courseName || \"강의 정보 없음\"}</h2>\r\n      {message && <p>{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>팀 선택: </label>\r\n          <select value={selectedTeamId} onChange={handleTeamChange} required>\r\n            <option value=\"\">팀을 선택하세요</option>\r\n            {teams.map((team) => (\r\n              <option key={team.id} value={team.id}>\r\n                {team.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>프로젝트 이름: </label>\r\n          <input type=\"text\" value={projectName} onChange={(e) => setProjectName(e.target.value)} required />\r\n        </div>\r\n        <div>\r\n          <label>마감일: </label>\r\n          <input type=\"datetime-local\" value={deadline} readOnly /> {/* 자동 설정된 마감일, 수정 불가 */}\r\n        </div>\r\n        <button type=\"submit\">생성하기</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTeamProject;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}