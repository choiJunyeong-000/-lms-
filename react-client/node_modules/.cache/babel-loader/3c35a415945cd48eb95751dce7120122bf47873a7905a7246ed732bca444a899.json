{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\StudentAttendance.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentAttendance = () => {\n  _s();\n  const [attendanceData, setAttendanceData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [studentId, setStudentId] = useState(null); // studentId 상태 추가\n  const [token, setToken] = useState(null); // token 상태 추가\n\n  useEffect(() => {\n    const storedStudentId = localStorage.getItem(\"studentId\");\n    const storedToken = localStorage.getItem(\"token\");\n    console.log(\"Stored studentId:\", storedStudentId); // 확인\n    console.log(\"Stored token:\", storedToken); // 확인\n\n    if (storedStudentId) {\n      setStudentId(storedStudentId);\n    } else {\n      console.error(\"studentId가 로컬 스토리지에 없습니다.\");\n    }\n    if (storedToken) {\n      setToken(storedToken);\n    } else {\n      console.error(\"token이 로컬 스토리지에 없습니다.\");\n    }\n  }, []);\n  useEffect(() => {\n    const fetchAttendance = async () => {\n      if (!studentId || !token) {\n        console.error(\"로그인이 필요하거나 studentId가 없습니다.\");\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:8090/api/attendance/student`, {\n          params: {\n            studentId\n          },\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"응답 데이터:\", response.data); // 응답 데이터 구조 확인\n\n        const attendance = response.data.attendance;\n        const progress = response.data.progress;\n\n        // 출석 데이터와 진행 상황을 객체에서 배열로 변환\n        const attendanceArray = Object.entries(attendance).map(([week, status]) => ({\n          week,\n          status,\n          progress: progress[week] || '정보 없음'\n        }));\n        setAttendanceData(attendanceArray);\n      } catch (error) {\n        console.error(\"출석 데이터를 불러오는 중 오류 발생:\", error);\n        setAttendanceData([]); // 오류 발생 시 빈 배열로 설정\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (studentId && token) {\n      fetchAttendance();\n    }\n  }, [studentId, token]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  if (!attendanceData || attendanceData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uCD9C\\uC11D \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: attendanceData.map((attendance, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC8FC\\uCC28: \", attendance.week]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCD9C\\uC11D \\uC0C1\\uD0DC: \", attendance.status ? '출석' : '결석']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC9C4\\uD589 \\uC0C1\\uD669: \", attendance.progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentAttendance, \"ZemH7DRV50hETy9PL4xcbTA5YuE=\");\n_c = StudentAttendance;\nexport default StudentAttendance;\nvar _c;\n$RefreshReg$(_c, \"StudentAttendance\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","StudentAttendance","_s","attendanceData","setAttendanceData","loading","setLoading","studentId","setStudentId","token","setToken","storedStudentId","localStorage","getItem","storedToken","console","log","error","fetchAttendance","response","get","params","headers","Authorization","data","attendance","progress","attendanceArray","Object","entries","map","week","status","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/StudentAttendance.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst StudentAttendance = () => {\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [studentId, setStudentId] = useState(null); // studentId 상태 추가\r\n  const [token, setToken] = useState(null); // token 상태 추가\r\n\r\n  useEffect(() => {\r\n    const storedStudentId = localStorage.getItem(\"studentId\");\r\n    const storedToken = localStorage.getItem(\"token\");\r\n\r\n    console.log(\"Stored studentId:\", storedStudentId);  // 확인\r\n    console.log(\"Stored token:\", storedToken);          // 확인\r\n\r\n    if (storedStudentId) {\r\n      setStudentId(storedStudentId);\r\n    } else {\r\n      console.error(\"studentId가 로컬 스토리지에 없습니다.\");\r\n    }\r\n\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n    } else {\r\n      console.error(\"token이 로컬 스토리지에 없습니다.\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchAttendance = async () => {\r\n      if (!studentId || !token) {\r\n        console.error(\"로그인이 필요하거나 studentId가 없습니다.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`http://localhost:8090/api/attendance/student`, {\r\n          params: { studentId },\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        \r\n        console.log(\"응답 데이터:\", response.data);  // 응답 데이터 구조 확인\r\n        \r\n        const attendance = response.data.attendance;\r\n        const progress = response.data.progress;\r\n\r\n        // 출석 데이터와 진행 상황을 객체에서 배열로 변환\r\n        const attendanceArray = Object.entries(attendance).map(([week, status]) => ({\r\n          week,\r\n          status,\r\n          progress: progress[week] || '정보 없음',\r\n        }));\r\n\r\n        setAttendanceData(attendanceArray);\r\n      } catch (error) {\r\n        console.error(\"출석 데이터를 불러오는 중 오류 발생:\", error);\r\n        setAttendanceData([]); // 오류 발생 시 빈 배열로 설정\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (studentId && token) {\r\n      fetchAttendance();\r\n    }\r\n  }, [studentId, token]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!attendanceData || attendanceData.length === 0) {\r\n    return <div>출석 데이터가 없습니다.</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* 출석 데이터 출력 */}\r\n      {attendanceData.map((attendance, index) => (\r\n        <div key={index}>\r\n          <p>주차: {attendance.week}</p>\r\n          <p>출석 상태: {attendance.status ? '출석' : '결석'}</p>\r\n          <p>진행 상황: {attendance.progress}%</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentAttendance;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}