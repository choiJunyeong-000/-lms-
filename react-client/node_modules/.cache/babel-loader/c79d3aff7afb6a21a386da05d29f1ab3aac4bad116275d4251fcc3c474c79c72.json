{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\ProfessorExamQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./ProfessorExamQuestion.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfessorExamQuestion = () => {\n  _s();\n  const {\n    examId\n  } = useParams();\n  const [examTitle, setExamTitle] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [selectedQuestionId, setSelectedQuestionId] = useState(null);\n  const defaultNewQuestion = {\n    questionText: \"\",\n    answers: [\"\", \"\", \"\", \"\"],\n    correctAnswer: \"\",\n    score: \"\",\n    type: \"MULTIPLE_CHOICE\"\n  };\n  const [newQuestion, setNewQuestion] = useState(defaultNewQuestion);\n\n  // ✅ 시험 정보 가져오기\n  const fetchExamInfo = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(`http://localhost:8090/api/exams/${examId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data && response.data.title) {\n        setExamTitle(response.data.title);\n      } else {\n        setExamTitle(\"제목 없음\");\n      }\n    } catch (error) {\n      var _error$response;\n      console.error(\"❌ 시험 정보 불러오기 실패:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setExamTitle(\"시험 정보를 불러올 수 없습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ✅ 문제 목록 가져오기\n  const fetchQuestions = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(`http://localhost:8090/api/exams/${examId}/questions`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (Array.isArray(response.data)) {\n        setQuestions(response.data);\n      }\n    } catch (error) {\n      var _error$response2;\n      console.error(\"❌ 문제 목록 불러오기 실패:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      setQuestions([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ✅ 문제 선택하여 수정 폼에 로드\n  const handleSelectQuestion = question => {\n    setSelectedQuestionId(question.id);\n    setNewQuestion({\n      questionText: question.questionText,\n      answers: question.answers || [\"\", \"\", \"\", \"\"],\n      correctAnswer: question.correctAnswer || \"\",\n      score: question.score || \"\",\n      type: question.type || \"MULTIPLE_CHOICE\"\n    });\n  };\n\n  // ✅ 문제 추가 및 수정\n  const handleSaveQuestion = async () => {\n    let formattedType = newQuestion.type;\n    if (!newQuestion.questionText.trim()) {\n      alert(\"문제 내용을 입력하세요.\");\n      return;\n    }\n    if (newQuestion.type === \"MULTIPLE_CHOICE\" && (newQuestion.answers.some(ans => !ans.trim()) || !newQuestion.correctAnswer)) {\n      alert(\"객관식 문제의 4개 답안을 모두 입력하고 정답을 선택하세요.\");\n      return;\n    }\n    if (!newQuestion.score || isNaN(newQuestion.score) || newQuestion.score <= 0) {\n      alert(\"유효한 점수를 입력하세요.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (selectedQuestionId) {\n        // ✅ 기존 문제 수정\n\n        await axios.put(`http://localhost:8090/api/exams/${examId}/questions/${selectedQuestionId}`, newQuestion, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert(\"문제가 수정되었습니다!\"); // ✅ 수정 완료 알림 추가\n      } else {\n        // ✅ 새 문제 추가\n\n        await axios.post(`http://localhost:8090/api/exams/${examId}/questions`, newQuestion, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert(\"문제가 추가되었습니다!\");\n      }\n\n      // ✅ 문제 목록 갱신\n      await fetchQuestions();\n\n      // ✅ 입력 필드 초기화\n      setSelectedQuestionId(null);\n      setNewQuestion(defaultNewQuestion);\n      setSuccessMessage(\"문제가 성공적으로 저장되었습니다!\");\n      setTimeout(() => setSuccessMessage(\"\"), 3000);\n    } catch (error) {\n      var _error$response3;\n      console.error(\"❌ 문제 저장 실패:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      alert(\"문제 저장에 실패했습니다. 다시 시도해주세요.\");\n    }\n  };\n\n  // ✅ 시험 등록 버튼 클릭 시 입력 폼 초기화\n  const handleRegisterExam = () => {\n    setSelectedQuestionId(null);\n    const newQuestion = {\n      ...defaultNewQuestion,\n      number: questions.length + 1 // 현재 시험의 문제 개수 + 1\n    };\n    setNewQuestion(newQuestion);\n  };\n  useEffect(() => {\n    fetchExamInfo();\n    fetchQuestions();\n  }, [examId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exam-container2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uBB38\\uC81C \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSelectQuestion(question),\n        className: \"question-button\",\n        children: [index + 1, \"  \"]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegisterExam,\n        className: \"register-button\",\n        children: \"\\uBB38\\uC81C \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedQuestionId ? \"문제 수정\" : \"새 문제 추가\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uBB38\\uC81C \\uC720\\uD615\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-type-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: newQuestion.type === \"MULTIPLE_CHOICE\" ? \"active\" : \"\",\n            onClick: () => setNewQuestion({\n              ...newQuestion,\n              type: \"MULTIPLE_CHOICE\",\n              answers: [\"\", \"\", \"\", \"\"],\n              correctAnswer: \"\"\n            }),\n            children: \"\\uAC1D\\uAD00\\uC2DD (4\\uC9C0\\uC120\\uB2E4)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: newQuestion.type === \"ESSAY\" ? \"active\" : \"\",\n            onClick: () => setNewQuestion({\n              ...newQuestion,\n              type: \"ESSAY\",\n              answers: [],\n              correctAnswer: \"\"\n            }),\n            children: \"\\uC11C\\uC220\\uD615\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uBB38\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uBB38\\uC81C \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          value: newQuestion.questionText,\n          onChange: e => setNewQuestion({\n            ...newQuestion,\n            questionText: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uBC30\\uC810\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"\\uBC30\\uC810\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          value: newQuestion.score,\n          onChange: e => setNewQuestion({\n            ...newQuestion,\n            score: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), newQuestion.type === \"MULTIPLE_CHOICE\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uAC1D\\uAD00\\uC2DD \\uB2F5\\uBCC0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), newQuestion.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: `답변 ${index + 1}`,\n            value: answer,\n            onChange: e => {\n              const updatedAnswers = [...newQuestion.answers];\n              updatedAnswers[index] = e.target.value;\n              setNewQuestion({\n                ...newQuestion,\n                answers: updatedAnswers\n              });\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uC815\\uB2F5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newQuestion.correctAnswer,\n            onChange: e => setNewQuestion({\n              ...newQuestion,\n              correctAnswer: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"\\uC815\\uB2F5 \\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), newQuestion.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: answer,\n              children: answer\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveQuestion,\n        className: \"save-button\",\n        children: selectedQuestionId ? \"등록\" : \"등록\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfessorExamQuestion, \"4QWxqdOP+VioT/MWRazbrnjV9CY=\", false, function () {\n  return [useParams];\n});\n_c = ProfessorExamQuestion;\nexport default ProfessorExamQuestion;\nvar _c;\n$RefreshReg$(_c, \"ProfessorExamQuestion\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfessorExamQuestion","_s","examId","examTitle","setExamTitle","questions","setQuestions","loading","setLoading","successMessage","setSuccessMessage","selectedQuestionId","setSelectedQuestionId","defaultNewQuestion","questionText","answers","correctAnswer","score","type","newQuestion","setNewQuestion","fetchExamInfo","token","localStorage","getItem","response","get","headers","Authorization","data","title","error","_error$response","console","message","fetchQuestions","Array","isArray","_error$response2","handleSelectQuestion","question","id","handleSaveQuestion","formattedType","trim","alert","some","ans","isNaN","put","post","setTimeout","_error$response3","handleRegisterExam","number","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","placeholder","value","onChange","e","target","answer","updatedAnswers","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/ProfessorExamQuestion.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./ProfessorExamQuestion.css\";\r\n\r\nconst ProfessorExamQuestion = () => {\r\n  const { examId } = useParams();\r\n  const [examTitle, setExamTitle] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [selectedQuestionId, setSelectedQuestionId] = useState(null);\r\n\r\n  const defaultNewQuestion = {\r\n    questionText: \"\",\r\n    answers: [\"\", \"\", \"\", \"\"],\r\n    correctAnswer: \"\",\r\n    score: \"\",\r\n    type: \"MULTIPLE_CHOICE\",\r\n  };\r\n\r\n  const [newQuestion, setNewQuestion] = useState(defaultNewQuestion);\r\n\r\n  // ✅ 시험 정보 가져오기\r\n  const fetchExamInfo = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const response = await axios.get(`http://localhost:8090/api/exams/${examId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (response.data && response.data.title) {\r\n        setExamTitle(response.data.title);\r\n      } else {\r\n        setExamTitle(\"제목 없음\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ 시험 정보 불러오기 실패:\", error.response?.data || error.message);\r\n      setExamTitle(\"시험 정보를 불러올 수 없습니다.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ✅ 문제 목록 가져오기\r\n  const fetchQuestions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const response = await axios.get(`http://localhost:8090/api/exams/${examId}/questions`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (Array.isArray(response.data)) {\r\n        setQuestions(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ 문제 목록 불러오기 실패:\", error.response?.data || error.message);\r\n      setQuestions([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ✅ 문제 선택하여 수정 폼에 로드\r\n  const handleSelectQuestion = (question) => {\r\n    setSelectedQuestionId(question.id);\r\n    setNewQuestion({\r\n      questionText: question.questionText,\r\n      answers: question.answers || [\"\", \"\", \"\", \"\"],\r\n      correctAnswer: question.correctAnswer || \"\",\r\n      score: question.score || \"\",\r\n      type: question.type || \"MULTIPLE_CHOICE\",\r\n    });\r\n  };\r\n\r\n  // ✅ 문제 추가 및 수정\r\n  const handleSaveQuestion = async () => {\r\n    let formattedType = newQuestion.type;\r\n\r\n    if (!newQuestion.questionText.trim()) {\r\n      alert(\"문제 내용을 입력하세요.\");\r\n      return;\r\n    }\r\n\r\n    if (newQuestion.type === \"MULTIPLE_CHOICE\" && (newQuestion.answers.some(ans => !ans.trim()) || !newQuestion.correctAnswer)) {\r\n      alert(\"객관식 문제의 4개 답안을 모두 입력하고 정답을 선택하세요.\");\r\n      return;\r\n    }\r\n\r\n    if (!newQuestion.score || isNaN(newQuestion.score) || newQuestion.score <= 0) {\r\n      alert(\"유효한 점수를 입력하세요.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      if (selectedQuestionId) {\r\n        // ✅ 기존 문제 수정\r\n      \r\n\r\n        await axios.put(`http://localhost:8090/api/exams/${examId}/questions/${selectedQuestionId}`, newQuestion, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n\r\n        alert(\"문제가 수정되었습니다!\"); // ✅ 수정 완료 알림 추가\r\n      } else {\r\n        // ✅ 새 문제 추가\r\n       \r\n\r\n        await axios.post(`http://localhost:8090/api/exams/${examId}/questions`, newQuestion, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n     \r\n        alert(\"문제가 추가되었습니다!\");\r\n      }\r\n\r\n      // ✅ 문제 목록 갱신\r\n      await fetchQuestions();\r\n\r\n      // ✅ 입력 필드 초기화\r\n      setSelectedQuestionId(null);\r\n      setNewQuestion(defaultNewQuestion);\r\n\r\n      setSuccessMessage(\"문제가 성공적으로 저장되었습니다!\");\r\n      setTimeout(() => setSuccessMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"❌ 문제 저장 실패:\", error.response?.data || error.message);\r\n      alert(\"문제 저장에 실패했습니다. 다시 시도해주세요.\");\r\n    }\r\n  };\r\n\r\n  // ✅ 시험 등록 버튼 클릭 시 입력 폼 초기화\r\n  const handleRegisterExam = () => {\r\n    setSelectedQuestionId(null);\r\n  \r\n    const newQuestion = {\r\n      ...defaultNewQuestion,\r\n      number: questions.length + 1, // 현재 시험의 문제 개수 + 1\r\n    };\r\n  \r\n    setNewQuestion(newQuestion);\r\n  };\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    fetchExamInfo();\r\n    fetchQuestions();\r\n  }, [examId]);\r\n\r\n  return (\r\n    <div className=\"exam-container2\">\r\n      {/* ✅ 왼쪽: 문제 목록 */}\r\n      <div className=\"exam-sidebar\">\r\n        <h3>문제 목록</h3>\r\n          {questions.map((question, index) => (\r\n            <button key={question.id} onClick={() => handleSelectQuestion(question)} className=\"question-button\">\r\n            {index + 1}  {/* 1부터 시작하는 번호로 표시 */}\r\n            </button>\r\n            ))}\r\n          <button onClick={handleRegisterExam} className=\"register-button\">문제 추가</button>\r\n      </div>\r\n\r\n\r\n      {/* ✅ 오른쪽: 문제 추가/수정 폼 */}\r\n      <div className=\"question-form\">\r\n        <h2>{selectedQuestionId ? \"문제 수정\" : \"새 문제 추가\"}</h2>\r\n\r\n        {/* ✅ 문제 유형 선택 (제일 위로 이동) */}\r\n        <div className=\"form-group\">\r\n          <label>문제 유형</label>\r\n          <div className=\"question-type-toggle\">\r\n            <button \r\n              className={newQuestion.type === \"MULTIPLE_CHOICE\" ? \"active\" : \"\"}\r\n              onClick={() => setNewQuestion({ ...newQuestion, type: \"MULTIPLE_CHOICE\", answers: [\"\", \"\", \"\", \"\"], correctAnswer: \"\" })}\r\n            >\r\n              객관식 (4지선다)\r\n            </button>\r\n            <button \r\n              className={newQuestion.type === \"ESSAY\" ? \"active\" : \"\"}\r\n              onClick={() => setNewQuestion({ ...newQuestion, type: \"ESSAY\", answers: [], correctAnswer: \"\" })}\r\n            >\r\n              서술형\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>문제</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"문제 내용을 입력하세요.\"\r\n            value={newQuestion.questionText}\r\n            onChange={(e) => setNewQuestion({ ...newQuestion, questionText: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>배점</label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"배점을 입력하세요.\"\r\n            value={newQuestion.score}\r\n            onChange={(e) => setNewQuestion({ ...newQuestion, score: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        {/* ✅ 객관식 문제일 경우만 답변 필드 표시 */}\r\n        {newQuestion.type === \"MULTIPLE_CHOICE\" && (\r\n          <>\r\n            <div className=\"form-group\">\r\n              <label>객관식 답변</label>\r\n              {newQuestion.answers.map((answer, index) => (\r\n                <input\r\n                  key={index}\r\n                  type=\"text\"\r\n                  placeholder={`답변 ${index + 1}`}\r\n                  value={answer}\r\n                  onChange={(e) => {\r\n                    const updatedAnswers = [...newQuestion.answers];\r\n                    updatedAnswers[index] = e.target.value;\r\n                    setNewQuestion({ ...newQuestion, answers: updatedAnswers });\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>정답</label>\r\n              <select\r\n                value={newQuestion.correctAnswer}\r\n                onChange={(e) => setNewQuestion({ ...newQuestion, correctAnswer: e.target.value })}\r\n              >\r\n                <option value=\"\">정답 선택</option>\r\n                {newQuestion.answers.map((answer, index) => (\r\n                  <option key={index} value={answer}>\r\n                    {answer}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button onClick={handleSaveQuestion} className=\"save-button\">\r\n          {selectedQuestionId ? \"등록\" : \"등록\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessorExamQuestion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}