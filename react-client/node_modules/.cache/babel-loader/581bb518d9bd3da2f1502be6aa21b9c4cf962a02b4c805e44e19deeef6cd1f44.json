{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\AddContentForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddContentForm = ({\n  courseId,\n  weekNumber,\n  onContentAdded = () => {},\n  token // JWT 토큰을 prop으로 받음\n}) => {\n  _s();\n  const [videoFile, setVideoFile] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [memberId, setMemberId] = useState(null); // memberId 상태 추가\n\n  useEffect(() => {\n    if (token) {\n      // JWT 토큰을 이용해 사용자 정보를 가져오는 API 호출\n      const fetchUserData = async () => {\n        try {\n          const userResponse = await axios.get('http://localhost:8090/api/users/me', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setMemberId(userResponse.data.id); // 받아온 사용자 ID로 memberId 설정\n        } catch (error) {\n          console.error('사용자 정보 조회 실패:', error);\n          setErrorMessage('사용자 정보를 가져오는 데 실패했습니다.');\n        }\n      };\n      fetchUserData();\n    }\n  }, [token]);\n  const handleVideoUpload = async e => {\n    e.preventDefault();\n    setErrorMessage('');\n    setSuccessMessage('');\n    if (!videoFile) {\n      setErrorMessage('업로드할 비디오 파일을 선택해주세요.');\n      return;\n    }\n    if (!memberId) {\n      setErrorMessage('로그인 정보가 없습니다.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', videoFile);\n    formData.append('memberId', memberId); // memberId를 추가로 FormData에 포함\n\n    try {\n      const url = `http://localhost:8090/api/courses/${courseId}/weeks/${weekNumber}/content`;\n      await axios.post(url, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}` // JWT 토큰을 헤더에 추가\n        }\n      });\n      setSuccessMessage('비디오 업로드에 성공했습니다!');\n      onContentAdded(); // 부모 컴포넌트에 콘텐츠 추가 알림\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data, _error$response3, _error$response3$data;\n      console.error(\"업로드 실패:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      const errMsg = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message || '알 수 없는 오류가 발생했습니다.';\n      setErrorMessage(errMsg);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [weekNumber, \"\\uC8FC\\uCC28 \\uBE44\\uB514\\uC624 \\uC5C5\\uB85C\\uB4DC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVideoUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: e => setVideoFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uBE44\\uB514\\uC624 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AddContentForm, \"lq2FrDB1sYL5JHQY6sctrBj1O1c=\");\n_c = AddContentForm;\nexport default AddContentForm;\nvar _c;\n$RefreshReg$(_c, \"AddContentForm\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","AddContentForm","courseId","weekNumber","onContentAdded","token","_s","videoFile","setVideoFile","errorMessage","setErrorMessage","successMessage","setSuccessMessage","memberId","setMemberId","fetchUserData","userResponse","get","headers","Authorization","data","id","error","console","handleVideoUpload","e","preventDefault","formData","FormData","append","url","post","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response3$data","response","errMsg","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","accept","onChange","target","files","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/AddContentForm.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AddContentForm = ({\r\n  courseId,\r\n  weekNumber,\r\n  onContentAdded = () => {},\r\n  token // JWT 토큰을 prop으로 받음\r\n}) => {\r\n  const [videoFile, setVideoFile] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [memberId, setMemberId] = useState(null); // memberId 상태 추가\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      // JWT 토큰을 이용해 사용자 정보를 가져오는 API 호출\r\n      const fetchUserData = async () => {\r\n        try {\r\n          const userResponse = await axios.get('http://localhost:8090/api/users/me', {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          setMemberId(userResponse.data.id); // 받아온 사용자 ID로 memberId 설정\r\n        } catch (error) {\r\n          console.error('사용자 정보 조회 실패:', error);\r\n          setErrorMessage('사용자 정보를 가져오는 데 실패했습니다.');\r\n        }\r\n      };\r\n\r\n      fetchUserData();\r\n    }\r\n  }, [token]);\r\n\r\n  const handleVideoUpload = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage('');\r\n    setSuccessMessage('');\r\n\r\n    if (!videoFile) {\r\n      setErrorMessage('업로드할 비디오 파일을 선택해주세요.');\r\n      return;\r\n    }\r\n\r\n    if (!memberId) {\r\n      setErrorMessage('로그인 정보가 없습니다.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', videoFile);\r\n    formData.append('memberId', memberId); // memberId를 추가로 FormData에 포함\r\n\r\n    try {\r\n      const url = `http://localhost:8090/api/courses/${courseId}/weeks/${weekNumber}/content`;\r\n      await axios.post(url, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Bearer ${token}`, // JWT 토큰을 헤더에 추가\r\n        },\r\n      });\r\n\r\n      setSuccessMessage('비디오 업로드에 성공했습니다!');\r\n      onContentAdded(); // 부모 컴포넌트에 콘텐츠 추가 알림\r\n    } catch (error) {\r\n      console.error(\"업로드 실패:\", error.response?.data);\r\n\r\n      const errMsg =\r\n        error.response?.data?.message ||\r\n        error.response?.data?.error ||\r\n        error.message ||\r\n        '알 수 없는 오류가 발생했습니다.';\r\n\r\n      setErrorMessage(errMsg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>{weekNumber}주차 비디오 업로드</h3>\r\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n      <form onSubmit={handleVideoUpload}>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"video/*\"\r\n          onChange={(e) => setVideoFile(e.target.files[0])}\r\n        />\r\n        <button type=\"submit\">비디오 업로드</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddContentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}