{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIG60309\\\\react-client\\\\src\\\\components\\\\survey\\\\CreateSurvey.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./CreateSurvey.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateSurvey = () => {\n  _s();\n  const token = localStorage.getItem(\"token\");\n\n  // 설문 제목 입력 필드를 제거했으므로 title 상태는 더 이상 사용하지 않습니다.\n  const [description, setDescription] = useState(\"\");\n  // 옵션을 배열로 관리 (쉼표로 구분된 문자열로 전환 예정)\n  const [options, setOptions] = useState([\"\"]);\n  const [isActive, setIsActive] = useState(true);\n  // surveyType 초기값은 빈 문자열로, 반드시 선택하게 함\n  const [surveyType, setSurveyType] = useState(\"\");\n  // 강의 평가 설문인 경우, 강의 목록과 선택된 강의 ID를 관리\n  const [courses, setCourses] = useState([]);\n  const [selectedCourseId, setSelectedCourseId] = useState(\"\");\n\n  // 시작 날짜는 자동으로 현재 시각(new Date())로 설정하고 내부적으로 사용하지만 화면에 보이지 않음\n  const [startDate] = useState(new Date());\n  // 종료 날짜는 사용자가 드롭다운으로 선택 (시작일로부터 몇 일 후)\n  const [endDays, setEndDays] = useState(\"\");\n\n  // 종료 날짜 계산 함수: startDate + endDays(일)\n  const computeEndDate = (start, days) => {\n    if (!start || !days) return null;\n    const dt = new Date(start);\n    dt.setDate(dt.getDate() + Number(days));\n    return dt;\n  };\n\n  // ISO 8601 형식으로 변환 (밀리초 제거)\n  const formatDateTime = date => {\n    return date ? date.toISOString().split(\".\")[0] : null;\n  };\n\n  // 옵션 변경 처리\n  const handleOptionChange = (index, value) => {\n    const newOptions = [...options];\n    newOptions[index] = value;\n    setOptions(newOptions);\n  };\n\n  // 옵션 추가\n  const addOption = () => {\n    setOptions([...options, \"\"]);\n  };\n\n  // 옵션 제거 (최소 하나는 남도록)\n  const removeOption = index => {\n    if (options.length > 1) {\n      const newOptions = options.filter((_, i) => i !== index);\n      setOptions(newOptions);\n    }\n  };\n\n  // 강의 평가 설문일 경우 강의 목록 가져오기\n  useEffect(() => {\n    if (surveyType === \"LECTURE_EVALUATION\") {\n      const fetchCourses = async () => {\n        try {\n          const response = await fetch(\"http://localhost:8090/api/courses\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: token ? `Bearer ${token}` : \"\"\n            }\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setCourses(data);\n          } else {\n            console.error(\"강의 목록을 불러오지 못했습니다.\");\n          }\n        } catch (error) {\n          console.error(\"강의 목록 요청 중 오류:\", error);\n        }\n      };\n      fetchCourses();\n    }\n  }, [surveyType, token]);\n\n  // 설문 데이터 전송\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // 강의 평가 설문인 경우, 선택된 강의가 없으면 경고\n    if (surveyType === \"LECTURE_EVALUATION\" && !selectedCourseId) {\n      alert(\"강의 평가 설문인 경우, 강의를 반드시 선택해야 합니다.\");\n      return;\n    }\n\n    // 종료 기간(일수)이 선택되지 않으면 경고\n    if (!endDays) {\n      alert(\"종료 기간(시작일로부터 몇 일 후인지를) 반드시 선택해주세요.\");\n      return;\n    }\n\n    // 옵션 배열을 쉼표로 구분된 문자열로 변환\n    const optionsString = options.join(\", \");\n    // 종료 날짜 계산 (시작 날짜는 자동으로 현재 시각)\n    const computedEndDate = computeEndDate(startDate, endDays);\n\n    // 여기서 title은 description과 동일하게 설정\n    const surveyData = {\n      title: description,\n      description,\n      options: optionsString,\n      isActive,\n      surveyType,\n      startDate: formatDateTime(startDate),\n      endDate: formatDateTime(computedEndDate),\n      courseId: selectedCourseId ? Number(selectedCourseId) : null\n    };\n    try {\n      const response = await fetch(\"http://localhost:8090/api/surveys/addsurvey\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token ? `Bearer ${token}` : \"\"\n        },\n        body: JSON.stringify(surveyData)\n      });\n      if (response.ok) {\n        alert(\"설문이 성공적으로 추가되었습니다!\");\n        setDescription(\"\");\n        setOptions([\"\"]);\n        setEndDays(\"\");\n        setSurveyType(\"\");\n        setSelectedCourseId(\"\");\n        setCourses([]);\n      } else {\n        throw new Error(\"설문 추가 실패\");\n      }\n    } catch (error) {\n      console.error(\"설문 추가 중 오류 발생:\", error);\n      alert(\"설문 추가 중 오류가 발생했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-survey-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC124\\uBB38 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC124\\uBB38 \\uC124\\uBA85:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC124\\uBB38 \\uC120\\uD0DD\\uC9C0:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: option,\n            onChange: e => handleOptionChange(index, e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), options.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"remove-btn\",\n            onClick: () => removeOption(index),\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"option-buttons\",\n          onClick: addOption,\n          children: \"\\uC120\\uD0DD\\uC9C0 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC124\\uBB38 \\uC720\\uD615:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: surveyType,\n          onChange: e => {\n            setSurveyType(e.target.value);\n            setSelectedCourseId(\"\");\n            setCourses([]);\n          },\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"-- \\uC124\\uBB38 \\uC720\\uD615 \\uC120\\uD0DD --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MEAL_SURVEY\",\n            children: \"\\uAE09\\uC2DD \\uB9CC\\uC871\\uB3C4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ACADEMIC_SURVEY\",\n            children: \"\\uD559\\uAD50 \\uC6B4\\uC601\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"LECTURE_EVALUATION\",\n            children: \"\\uAC15\\uC758 \\uD3C9\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"GENERAL_SURVEY\",\n            children: \"\\uC77C\\uBC18 \\uC124\\uBB38\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), surveyType === \"LECTURE_EVALUATION\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uAC15\\uC758 \\uC120\\uD0DD:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCourseId,\n          onChange: e => setSelectedCourseId(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"-- \\uAC15\\uC758\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694 --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: course.id,\n            children: course.name\n          }, course.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC885\\uB8CC \\uAE30\\uAC04 (\\uC2DC\\uC791\\uC77C\\uB85C\\uBD80\\uD130 \\uBA87 \\uC77C \\uD6C4):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: endDays,\n          onChange: e => setEndDays(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"-- \\uC885\\uB8CC \\uAE30\\uAC04 \\uC120\\uD0DD --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), Array.from({\n            length: 14\n          }, (_, i) => i + 1).map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: day,\n            children: [day, \"\\uC77C \\uD6C4\"]\n          }, day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"\\uC124\\uBB38 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateSurvey, \"Lg9TtFxhgcbYji9wx68y/6UqcKk=\");\n_c = CreateSurvey;\nexport default CreateSurvey;\nvar _c;\n$RefreshReg$(_c, \"CreateSurvey\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CreateSurvey","_s","token","localStorage","getItem","description","setDescription","options","setOptions","isActive","setIsActive","surveyType","setSurveyType","courses","setCourses","selectedCourseId","setSelectedCourseId","startDate","Date","endDays","setEndDays","computeEndDate","start","days","dt","setDate","getDate","Number","formatDateTime","date","toISOString","split","handleOptionChange","index","value","newOptions","addOption","removeOption","length","filter","_","i","fetchCourses","response","fetch","headers","Authorization","ok","data","json","console","error","handleSubmit","e","preventDefault","alert","optionsString","join","computedEndDate","surveyData","title","endDate","courseId","method","body","JSON","stringify","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","required","map","option","type","onClick","disabled","course","id","name","Array","from","day","_c","$RefreshReg$"],"sources":["C:/Users/BIG60309/react-client/src/components/survey/CreateSurvey.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./CreateSurvey.css\";\r\n\r\nconst CreateSurvey = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // 설문 제목 입력 필드를 제거했으므로 title 상태는 더 이상 사용하지 않습니다.\r\n  const [description, setDescription] = useState(\"\");\r\n  // 옵션을 배열로 관리 (쉼표로 구분된 문자열로 전환 예정)\r\n  const [options, setOptions] = useState([\"\"]);\r\n  const [isActive, setIsActive] = useState(true);\r\n  // surveyType 초기값은 빈 문자열로, 반드시 선택하게 함\r\n  const [surveyType, setSurveyType] = useState(\"\");\r\n  // 강의 평가 설문인 경우, 강의 목록과 선택된 강의 ID를 관리\r\n  const [courses, setCourses] = useState([]);\r\n  const [selectedCourseId, setSelectedCourseId] = useState(\"\");\r\n  \r\n  // 시작 날짜는 자동으로 현재 시각(new Date())로 설정하고 내부적으로 사용하지만 화면에 보이지 않음\r\n  const [startDate] = useState(new Date());\r\n  // 종료 날짜는 사용자가 드롭다운으로 선택 (시작일로부터 몇 일 후)\r\n  const [endDays, setEndDays] = useState(\"\");\r\n\r\n  // 종료 날짜 계산 함수: startDate + endDays(일)\r\n  const computeEndDate = (start, days) => {\r\n    if (!start || !days) return null;\r\n    const dt = new Date(start);\r\n    dt.setDate(dt.getDate() + Number(days));\r\n    return dt;\r\n  };\r\n\r\n  // ISO 8601 형식으로 변환 (밀리초 제거)\r\n  const formatDateTime = (date) => {\r\n    return date ? date.toISOString().split(\".\")[0] : null;\r\n  };\r\n\r\n  // 옵션 변경 처리\r\n  const handleOptionChange = (index, value) => {\r\n    const newOptions = [...options];\r\n    newOptions[index] = value;\r\n    setOptions(newOptions);\r\n  };\r\n\r\n  // 옵션 추가\r\n  const addOption = () => {\r\n    setOptions([...options, \"\"]);\r\n  };\r\n\r\n  // 옵션 제거 (최소 하나는 남도록)\r\n  const removeOption = (index) => {\r\n    if (options.length > 1) {\r\n      const newOptions = options.filter((_, i) => i !== index);\r\n      setOptions(newOptions);\r\n    }\r\n  };\r\n\r\n  // 강의 평가 설문일 경우 강의 목록 가져오기\r\n  useEffect(() => {\r\n    if (surveyType === \"LECTURE_EVALUATION\") {\r\n      const fetchCourses = async () => {\r\n        try {\r\n          const response = await fetch(\"http://localhost:8090/api/courses\", {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: token ? `Bearer ${token}` : \"\",\r\n            },\r\n          });\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setCourses(data);\r\n          } else {\r\n            console.error(\"강의 목록을 불러오지 못했습니다.\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"강의 목록 요청 중 오류:\", error);\r\n        }\r\n      };\r\n\r\n      fetchCourses();\r\n    }\r\n  }, [surveyType, token]);\r\n\r\n  // 설문 데이터 전송\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // 강의 평가 설문인 경우, 선택된 강의가 없으면 경고\r\n    if (surveyType === \"LECTURE_EVALUATION\" && !selectedCourseId) {\r\n      alert(\"강의 평가 설문인 경우, 강의를 반드시 선택해야 합니다.\");\r\n      return;\r\n    }\r\n\r\n    // 종료 기간(일수)이 선택되지 않으면 경고\r\n    if (!endDays) {\r\n      alert(\"종료 기간(시작일로부터 몇 일 후인지를) 반드시 선택해주세요.\");\r\n      return;\r\n    }\r\n\r\n    // 옵션 배열을 쉼표로 구분된 문자열로 변환\r\n    const optionsString = options.join(\", \");\r\n    // 종료 날짜 계산 (시작 날짜는 자동으로 현재 시각)\r\n    const computedEndDate = computeEndDate(startDate, endDays);\r\n\r\n    // 여기서 title은 description과 동일하게 설정\r\n    const surveyData = {\r\n      title: description,\r\n      description,\r\n      options: optionsString,\r\n      isActive,\r\n      surveyType,\r\n      startDate: formatDateTime(startDate),\r\n      endDate: formatDateTime(computedEndDate),\r\n      courseId: selectedCourseId ? Number(selectedCourseId) : null,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8090/api/surveys/addsurvey\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token ? `Bearer ${token}` : \"\",\r\n        },\r\n        body: JSON.stringify(surveyData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"설문이 성공적으로 추가되었습니다!\");\r\n        setDescription(\"\");\r\n        setOptions([\"\"]);\r\n        setEndDays(\"\");\r\n        setSurveyType(\"\");\r\n        setSelectedCourseId(\"\");\r\n        setCourses([]);\r\n      } else {\r\n        throw new Error(\"설문 추가 실패\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"설문 추가 중 오류 발생:\", error);\r\n      alert(\"설문 추가 중 오류가 발생했습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-survey-container\">\r\n      <h2>설문 추가</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* 설문 제목 입력 필드 제거 */}\r\n  \r\n        <div className=\"form-group\">\r\n          <label>설문 설명:</label>\r\n          <textarea\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n  \r\n        <div className=\"form-group\">\r\n          <label>설문 선택지:</label>\r\n          {options.map((option, index) => (\r\n            <div key={index} className=\"option-item\">\r\n              <input\r\n                type=\"text\"\r\n                value={option}\r\n                onChange={(e) => handleOptionChange(index, e.target.value)}\r\n                required\r\n              />\r\n              {options.length > 1 && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"remove-btn\"\r\n                  onClick={() => removeOption(index)}\r\n                >\r\n                  제거\r\n                </button>\r\n              )}\r\n            </div>\r\n          ))}\r\n          <button type=\"button\" className=\"option-buttons\" onClick={addOption}>\r\n            선택지 추가\r\n          </button>\r\n        </div>\r\n  \r\n        <div className=\"form-group\">\r\n          <label>설문 유형:</label>\r\n          <select\r\n            value={surveyType}\r\n            onChange={(e) => {\r\n              setSurveyType(e.target.value);\r\n              setSelectedCourseId(\"\");\r\n              setCourses([]);\r\n            }}\r\n            required\r\n          >\r\n            <option value=\"\" disabled>\r\n              -- 설문 유형 선택 --\r\n            </option>\r\n            <option value=\"MEAL_SURVEY\">급식 만족도</option>\r\n            <option value=\"ACADEMIC_SURVEY\">학교 운영</option>\r\n            <option value=\"LECTURE_EVALUATION\">강의 평가</option>\r\n            <option value=\"GENERAL_SURVEY\">일반 설문</option>\r\n          </select>\r\n        </div>\r\n  \r\n        {surveyType === \"LECTURE_EVALUATION\" && (\r\n          <div className=\"form-group\">\r\n            <label>강의 선택:</label>\r\n            <select\r\n              value={selectedCourseId}\r\n              onChange={(e) => setSelectedCourseId(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\" disabled>\r\n                -- 강의를 선택하세요 --\r\n              </option>\r\n              {courses.map((course) => (\r\n                <option key={course.id} value={course.id}>\r\n                  {course.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n  \r\n        {/* 시작 날짜와 설문 제목은 화면에 보이지 않도록 제거됨 */}\r\n  \r\n        <div className=\"form-group\">\r\n          <label>종료 기간 (시작일로부터 몇 일 후):</label>\r\n          <select\r\n            value={endDays}\r\n            onChange={(e) => setEndDays(e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"\" disabled>\r\n              -- 종료 기간 선택 --\r\n            </option>\r\n            {Array.from({ length: 14 }, (_, i) => i + 1).map((day) => (\r\n              <option key={day} value={day}>\r\n                {day}일 후\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n  \r\n        <button type=\"submit\" className=\"submit-btn\">\r\n          설문 생성\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateSurvey;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}